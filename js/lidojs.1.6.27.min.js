!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.editolido=t():e.editolido=t()}(globalThis,(function(){return(()=>{var e={396:e=>{for(var t="0123456789bcdefghjkmnpqrstuvwxyz",n={},a=0;a<t.length;a++)n[t.charAt(a)]=a;var i="auto",r=-90,N=90,A=-180,o=180,s=[0,5,7,8,11,12,13,15,16,17,18],E=function(e,n,a){if(a===i){if("number"==typeof e||"number"==typeof n)throw new Error("string notation required for auto precision.");var E=e.split(".")[1].length,S=n.split(".")[1].length,l=Math.max(E,S);a=s[l]}else void 0===a&&(a=9);for(var L,u=[],c=0,O=0,T=0,M=N,I=r,B=o,R=A;u.length<a;)if(O%2==0?n>(L=(B+R)/2)?(T=1+(T<<1),R=L):(T=0+(T<<1),B=L):e>(L=(M+I)/2)?(T=1+(T<<1),I=L):(T=0+(T<<1),M=L),O++,5==++c){var F=t[T];u.push(F),c=0,T=0}return u.join("")},S=function(e,t,n){n=n||52;for(var a,i=0,s=N,E=r,S=o,l=A,L=0;i<n;)L*=2,i%2==0?t>(a=(S+l)/2)?(L+=1,l=a):S=a:e>(a=(s+E)/2)?(L+=1,E=a):s=a,i++;return L},l=function(e){for(var t,a=!0,i=N,s=r,E=o,S=A,l=0,L=0,u=e.length;L<u;L++){var c=e[L].toLowerCase();l=n[c];for(var O=4;O>=0;O--){var T=l>>O&1;a?(t=(E+S)/2,1===T?S=t:E=t):(t=(i+s)/2,1===T?s=t:i=t),a=!a}}return[s,S,i,E]},L=function(e,t){for(var n=N,a=r,i=o,s=A,E=0,S=(t=t||52)/2,l=0;l<S;l++)E=u(e,2*(S-l)-1),0===u(e,2*(S-l)-2)?n=(n+a)/2:a=(n+a)/2,0===E?i=(i+s)/2:s=(i+s)/2;return[a,s,n,i]};function u(e,t){return e/Math.pow(2,t)&1}var c=function(e){var t=l(e),n=(t[0]+t[2])/2,a=(t[1]+t[3])/2;return{latitude:n,longitude:a,error:{latitude:t[2]-n,longitude:t[3]-a}}},O=function(e,t){var n=L(e,t),a=(n[0]+n[2])/2,i=(n[1]+n[3])/2;return{latitude:a,longitude:i,error:{latitude:n[2]-a,longitude:n[3]-i}}},T=function(e,t){var n=c(e),a=n.latitude+t[0]*n.error.latitude*2,i=n.longitude+t[1]*n.error.longitude*2;return i=I(i),a=B(a),E(a,i,e.length)},M=function(e,t,n){var a=O(e,n=n||52),i=a.latitude+t[0]*a.error.latitude*2,r=a.longitude+t[1]*a.error.longitude*2;return r=I(r),i=B(i),S(i,r,n)};function I(e){return e>o?A+e%o:e<A?o+e%o:e}function B(e){return e>N?N:e<r?r:e}var R={ENCODE_AUTO:i,encode:E,encode_uint64:S,encode_int:S,decode:c,decode_int:O,decode_uint64:O,decode_bbox:l,decode_bbox_uint64:L,decode_bbox_int:L,neighbor:T,neighbor_int:M,neighbors:function(e){var t,n,a=e.length,i=c(e),r=i.latitude,N=i.longitude,A=2*i.error.latitude,o=2*i.error.longitude;function s(e,i){return t=r+e*A,n=I(n=N+i*o),t=B(t),E(t,n,a)}return[s(1,0),s(1,1),s(0,1),s(-1,1),s(-1,0),s(-1,-1),s(0,-1),s(1,-1)]},neighbors_int:function(e,t){var n,a,i=O(e,t=t||52),r=i.latitude,N=i.longitude,A=2*i.error.latitude,o=2*i.error.longitude;function s(e,i){return n=r+e*A,a=I(a=N+i*o),n=B(n),S(n,a,t)}return[s(1,0),s(1,1),s(0,1),s(-1,1),s(-1,0),s(-1,-1),s(0,-1),s(1,-1)]},bboxes:function(e,t,n,a,i){for(var r=E(e,t,i=i||9),N=E(n,a,i),A=c(r),o=2*A.error.latitude,s=2*A.error.longitude,S=l(r),L=l(N),u=Math.round((L[0]-S[0])/o),O=Math.round((L[1]-S[1])/s),M=[],I=0;I<=u;I++)for(var B=0;B<=O;B++)M.push(T(r,[I,B]));return M},bboxes_int:function(e,t,n,a,i){for(var r=S(e,t,i=i||52),N=S(n,a,i),A=O(r,i),o=2*A.error.latitude,s=2*A.error.longitude,E=L(r,i),l=L(N,i),u=Math.round((l[0]-E[0])/o),c=Math.round((l[1]-E[1])/s),T=[],I=0;I<=u;I++)for(var B=0;B<=c;B++)T.push(M(r,[I,B],i));return T}};e.exports=R},709:e=>{"use strict";e.exports=JSON.parse('{"BGSF":[67.01697,-50.68932],"BGTL":[76.5312,-68.70316],"BIKF":[63.985,-22.60556],"BKPR":[42.57278,21.03583],"CYBG":[48.33055,-70.99639],"CYEG":[53.30989,-113.5795],"CYFB":[63.75657,-68.55612],"CYHZ":[44.87968,-63.51019],"CYJT":[48.54442,-58.54991],"CYMX":[45.67978,-74.03871],"CYOD":[54.405,-110.2794],"CYOW":[45.3225,-75.66727],"CYQB":[46.7912,-71.39331],"CYQM":[46.1161,-64.6786],"CYQT":[48.372,-89.32171],"CYQX":[48.93702,-54.56813],"CYQY":[46.16152,-60.04805],"CYUL":[45.47046,-73.74094],"CYVO":[48.05329,-77.78266],"CYVR":[49.1947,-123.184],"CYWG":[49.9099,-97.2399],"CYXE":[52.17096,-106.7],"CYYB":[46.36383,-79.42416],"CYYC":[51.12261,-114.0133],"CYYJ":[48.64806,-123.4274],"CYYQ":[58.73906,-94.06638],"CYYR":[53.31917,-60.42583],"CYYT":[47.61861,-52.7525],"CYYZ":[43.67607,-79.63048],"CYZF":[62.46304,-114.4404],"DAAG":[36.69383,3.214556],"DAAJ":[24.29306,9.451944],"DAAT":[22.81111,5.450833],"DABC":[36.28528,6.619167],"DAOO":[35.62722,-0.6113889],"DATM":[21.375,0.9238889],"DAUA":[27.83917,-0.1852778],"DAUE":[30.56889,2.864722],"DAUG":[32.38167,3.799444],"DAUH":[31.67389,6.140555],"DAUI":[27.25361,2.510833],"DAUZ":[28.05139,9.642777],"DBBB":[6.356383,2.38335],"DFFD":[12.35361,-1.511944],"DFOO":[11.1675,-4.321111],"DGAA":[5.604414,-0.1675444],"DGLE":[9.554119,-0.8662806],"DIAP":[5.254445,-3.928611],"DIBK":[7.7525,-5.067778],"DNAA":[9.006667,7.263055],"DNMM":[6.578647,3.322528],"DNPO":[5.015458,6.949533],"DRRN":[13.48167,2.170278],"DRZA":[16.96222,7.990278],"DTMB":[35.75806,10.75472],"DTNH":[36.07583,10.43861],"DTTA":[36.85111,10.22694],"DTTJ":[33.87556,10.77722],"DTTX":[34.72055,10.68861],"DXNG":[9.777573,1.095642],"DXXX":[6.165833,1.254167],"EBBR":[50.90139,4.484445],"EBCI":[50.46,4.452778],"EBOS":[51.19889,2.862222],"EDDB":[52.36225,13.50067],"EDDC":[51.13435,13.768],"EDDF":[50.03331,8.570456],"EDDH":[53.63039,9.988228],"EDDK":[50.86592,7.142745],"EDDL":[51.28093,6.757311],"EDDM":[48.35378,11.78609],"EDDN":[49.4987,11.07801],"EDDP":[51.42399,12.23638],"EDDS":[48.68988,9.221964],"EDDV":[52.46021,9.683522],"EDDW":[53.0474,8.786747],"EDFH":[49.94582,7.261078],"EDHI":[53.5338,9.832286],"EDSB":[48.77935,8.0805],"EETN":[59.41333,24.8325],"EFHK":[60.31722,24.96333],"EFIV":[68.61083,27.41389],"EFRO":[66.56167,25.83083],"EFTP":[61.41528,23.58778],"EFTU":[60.51472,22.26167],"EGAA":[54.6575,-6.215833],"EGBB":[52.45389,-1.748056],"EGCC":[53.35389,-2.275],"EGFF":[51.39667,-3.343333],"EGGD":[51.38278,-2.719167],"EGGP":[53.33361,-2.849722],"EGGW":[51.87472,-0.3683333],"EGKK":[51.14806,-0.1902778],"EGLL":[51.4775,-0.4613889],"EGNT":[55.03806,-1.689722],"EGNV":[54.50917,-1.429444],"EGNX":[52.83111,-1.327778],"EGPF":[55.87194,-4.433055],"EGPH":[55.95,-3.3725],"EGPK":[55.50945,-4.594444],"EGPO":[58.21556,-6.331111],"EGSC":[52.205,0.175],"EGSH":[52.67583,1.282778],"EGSS":[51.885,0.235],"EGTE":[50.73417,-3.413889],"EHAM":[52.30806,4.764167],"EHBK":[50.91583,5.776945],"EHEH":[51.45013,5.374514],"EHRD":[51.95694,4.437222],"EICK":[51.84139,-8.491111],"EIDW":[53.42139,-6.27],"EINN":[52.70195,-8.924723],"EKBI":[55.74032,9.151778],"EKCH":[55.61792,12.65597],"ELLX":[49.62333,6.204444],"ENBO":[67.26917,14.36528],"ENBR":[60.29361,5.218056],"ENGM":[60.20278,11.08389],"ENNA":[70.06667,24.97389],"ENSB":[78.24611,15.46556],"ENTC":[69.68139,18.91778],"ENTO":[59.18667,10.25861],"ENVA":[63.4575,10.92417],"ENZV":[58.87667,5.637778],"EPGD":[54.3775,18.46611],"EPKK":[50.07778,19.78472],"EPKT":[50.47417,19.08],"EPPO":[52.42111,16.82639],"EPSC":[53.58472,14.90222],"EPWA":[52.16583,20.96722],"EPWR":[51.10278,16.88583],"ESGG":[57.66,12.29111],"ESGJ":[57.75834,14.06917],"ESKN":[58.78861,16.90361],"ESMS":[55.54833,13.35333],"ESNQ":[67.82139,20.33556],"ESNZ":[63.19444,14.50028],"ESOW":[59.58944,16.63361],"ESSA":[59.65194,17.91861],"ESSV":[57.66278,18.34611],"EVRA":[56.92361,23.97111],"EYKA":[54.96389,24.08472],"EYPA":[55.97306,21.09389],"EYVI":[54.63694,25.28778],"FABL":[-29.09379,26.30396],"FACT":[-33.97137,18.60429],"FALE":[-29.61177,31.11931],"FAOR":[-26.13369,28.24232],"FAUP":[-28.40102,21.25966],"FBSK":[-24.55583,25.91889],"FCBB":[-4.250556,15.25139],"FCPP":[-4.814795,11.88629],"FEFF":[4.397658,18.51978],"FGSL":[3.755295,8.708709],"FIMP":[-20.43,57.68306],"FKKD":[4.011667,9.708333],"FKYS":[3.722564,11.55336],"FLKK":[-15.33078,28.45261],"FMCH":[-11.53652,43.27132],"FMCZ":[-12.80667,45.28056],"FMEE":[-20.89,55.51639],"FMMI":[-18.79652,47.47609],"FMNM":[-15.66667,46.35111],"FMNN":[-13.31806,48.30917],"FNHU":[-12.8,15.75],"FNLU":[-8.855278,13.23389],"FNUE":[-11.76873,19.89708],"FOOG":[-0.7192639,8.75135],"FOOL":[0.4583333,9.412222],"FOON":[-1.651944,13.43472],"FPST":[0.3777778,6.713056],"FQBR":[-19.79583,34.90479],"FQMA":[-25.92083,32.57264],"FQNP":[-15.10306,39.28444],"FSIA":[-4.674345,55.52185],"FTTJ":[12.12495,15.02482],"FTTY":[17.91607,19.10886],"FVRG":[-17.93278,31.09389],"FWKI":[-13.78333,33.7775],"FYGF":[-19.6,18.13333],"FYKT":[-26.53879,18.11175],"FYWH":[-22.47989,17.47095],"FZAA":[-4.387164,15.44225],"FZEA":[0.02254167,18.28876],"FZIC":[0.4816778,25.33796],"FZOA":[-2.919242,25.91537],"FZQA":[-11.59128,27.5309],"FZUA":[-5.900084,22.4692],"GABS":[12.53778,-7.943333],"GBYD":[13.33794,-16.65235],"GCFV":[28.45278,-13.86389],"GCLP":[27.93194,-15.38667],"GCRR":[28.94546,-13.60522],"GCTS":[28.04445,-16.5725],"GCXO":[28.48278,-16.34167],"GFLL":[8.616458,-13.19558],"GLRB":[6.240445,-10.35988],"GMAD":[30.3225,-9.411389],"GMFF":[33.92722,-4.977778],"GMME":[34.05139,-6.751667],"GMMH":[23.71833,-15.93194],"GMMI":[31.39917,-9.683056],"GMML":[27.15167,-13.21917],"GMMN":[33.36417,-7.581666],"GMMX":[31.60861,-8.040833],"GMTT":[35.73167,-5.921111],"GOBD":[14.67076,-17.07282],"GQNO":[18.31,-15.96972],"GQPP":[20.92833,-17.03111],"GUCY":[9.576889,-13.61192],"GVAC":[16.73759,-22.95002],"HAAB":[8.975041,38.7994],"HBBA":[-3.320497,29.31798],"HDAM":[11.54722,43.15944],"HEAX":[31.18167,29.94639],"HEBA":[30.91814,29.69583],"HEBL":[22.37583,31.61167],"HECA":[30.11139,31.41389],"HEGN":[27.17861,33.80083],"HELX":[25.67083,32.70639],"HESH":[27.97861,34.39333],"HESN":[23.96445,32.82],"HHAS":[15.28417,38.90083],"HKJK":[-1.319242,36.92778],"HKMO":[-4.026278,39.59906],"HRYR":[-1.968447,30.13839],"HSPN":[19.43364,37.23407],"HSSK":[15.59036,32.55315],"HTDA":[-6.878111,39.20263],"HTKJ":[-3.429405,37.07446],"HTZA":[-6.224892,39.22517],"HUEN":[0.04081389,32.44054],"KABQ":[35.03893,-106.6083],"KATL":[33.6367,-84.42786],"KAUS":[30.19453,-97.66988],"KBAD":[32.50193,-93.66263],"KBDL":[41.93903,-72.68432],"KBFI":[47.52997,-122.3019],"KBGR":[44.80745,-68.82814],"KBHM":[33.56389,-86.7523],"KBIL":[45.80785,-108.5435],"KBNA":[36.12447,-86.67818],"KBOI":[43.56436,-116.2229],"KBOS":[42.36295,-71.00639],"KBWI":[39.17573,-76.66899],"KBYH":[35.96433,-89.94395],"KCHS":[32.89864,-80.04053],"KCIU":[46.25075,-84.47238],"KCLE":[41.40941,-81.85469],"KCLT":[35.21375,-80.94906],"KCMH":[39.99695,-82.89216],"KCVG":[39.04884,-84.66782],"KDEN":[39.86167,-104.6732],"KDFW":[32.89723,-97.0377],"KDLH":[46.84207,-92.19324],"KDSM":[41.53397,-93.66307],"KDTW":[42.21244,-83.35339],"KEWR":[40.69248,-74.16869],"KFLL":[26.07167,-80.1497],"KFWA":[40.97847,-85.19517],"KGEG":[47.61903,-117.5352],"KGRB":[44.48463,-88.12971],"KGTF":[47.4823,-111.3703],"KIAD":[38.94744,-77.45995],"KIAG":[43.10756,-78.94585],"KIAH":[29.98444,-95.34144],"KICT":[37.64994,-97.43305],"KIDA":[43.51367,-112.0708],"KIND":[39.7173,-86.29464],"KJAN":[32.31116,-90.07589],"KJAX":[30.49405,-81.68785],"KJFK":[40.63993,-73.77869],"KLAS":[36.08004,-115.1522],"KLAX":[33.9425,-118.4081],"KLGA":[40.77725,-73.87261],"KMCI":[39.29761,-94.71389],"KMCO":[28.42939,-81.309],"KMEM":[35.04241,-89.97668],"KMIA":[25.79536,-80.29012],"KMKE":[42.94693,-87.89706],"KMSP":[44.88197,-93.22178],"KMSY":[29.99328,-90.25903],"KMWH":[47.20858,-119.3191],"KOAK":[37.72125,-122.2211],"KOKC":[35.39307,-97.60076],"KONT":[34.05602,-117.6012],"KORD":[41.97694,-87.90815],"KORF":[36.8946,-76.20123],"KPAE":[47.90732,-122.2821],"KPBI":[26.68316,-80.09559],"KPDX":[45.58871,-122.5969],"KPHL":[39.87208,-75.24066],"KPHX":[33.43428,-112.0116],"KPIT":[40.49142,-80.2327],"KRDU":[35.87764,-78.78748],"KRFD":[42.19536,-89.09722],"KRIC":[37.50518,-77.31974],"KRNO":[39.49911,-119.7681],"KRSW":[26.53617,-81.75517],"KSAN":[32.73355,-117.1897],"KSAT":[29.53396,-98.46906],"KSEA":[47.44989,-122.3118],"KSFO":[37.6188,-122.3754],"KSGF":[37.24567,-93.38864],"KSLC":[40.78839,-111.9778],"KSMF":[38.69545,-121.5908],"KSTL":[38.7487,-90.37003],"KSWF":[41.50411,-74.10484],"KSYR":[43.11119,-76.10631],"KTPA":[27.97547,-82.53325],"KTUS":[32.11607,-110.941],"KTYS":[35.81109,-83.99407],"LATI":[41.41472,19.72056],"LBBG":[42.57028,27.51528],"LBPD":[42.06778,24.85083],"LBSF":[42.695,23.40833],"LBWN":[43.23195,27.82528],"LCLK":[34.87889,33.63028],"LCPH":[34.71808,32.48507],"LDDU":[42.56135,18.26824],"LDSP":[43.53894,16.29796],"LDZA":[45.74293,16.06878],"LDZD":[44.10827,15.3467],"LEAL":[38.28222,-0.5580556],"LEAM":[36.84389,-2.37],"LEAS":[43.56357,-6.034622],"LEBB":[43.30111,-2.910556],"LEBL":[41.29694,2.078333],"LEGE":[41.90083,2.760556],"LEIB":[38.87278,1.373056],"LELN":[42.58861,-5.656111],"LEMD":[40.47222,-3.560833],"LEMG":[36.675,-4.499166],"LEMH":[39.8625,4.218611],"LEPA":[39.55167,2.738889],"LERS":[41.1475,1.167222],"LESA":[40.95195,-5.501945],"LEST":[42.89639,-8.415277],"LETO":[40.49667,-3.445833],"LEVC":[39.48944,-0.4816667],"LEVD":[41.70611,-4.851944],"LEVT":[42.88284,-2.724469],"LEZG":[41.66611,-1.041667],"LEZL":[37.41806,-5.898889],"LFBD":[44.82865,-0.7153444],"LFBL":[45.86076,1.180306],"LFBO":[43.63513,1.367856],"LFBP":[43.3799,-0.4185111],"LFBT":[43.18545,-0.002894444],"LFBZ":[43.46831,-1.531161],"LFJL":[48.97828,6.246531],"LFKB":[42.55,9.484847],"LFKC":[42.52444,8.793056],"LFKF":[41.50211,9.096747],"LFKJ":[41.92389,8.8025],"LFLC":[45.78597,3.16245],"LFLL":[45.72564,5.081106],"LFLS":[45.36294,5.332664],"LFLX":[46.86031,1.721125],"LFMI":[43.5224,4.924236],"LFML":[43.43667,5.215],"LFMN":[43.66541,7.214983],"LFMP":[42.74083,2.869722],"LFMT":[43.58326,3.961378],"LFOB":[49.45442,2.112814],"LFOK":[48.77333,4.206156],"LFPG":[49.00975,2.547819],"LFPO":[48.72328,2.379578],"LFQQ":[50.56342,3.086822],"LFRB":[48.44713,-4.421753],"LFRG":[49.3634,0.1599972],"LFRH":[47.76053,-3.439953],"LFRN":[48.07193,-1.732233],"LFRQ":[47.97495,-4.167875],"LFRS":[47.15702,-1.607808],"LFSB":[47.58988,7.529222],"LFSG":[48.325,6.066741],"LFST":[48.54194,7.634444],"LFTH":[43.09734,6.14603],"LFTW":[43.75743,4.416345],"LGAV":[37.9367,23.9445],"LGBL":[39.21944,22.79445],"LGEL":[38.06944,23.55417],"LGIR":[35.33972,25.18028],"LGKL":[37.06833,22.02528],"LGKR":[39.60194,19.91222],"LGLM":[39.91722,25.23639],"LGMK":[37.43722,25.34722],"LGRP":[36.40528,28.08611],"LGSA":[35.53139,24.15111],"LGSR":[36.39917,25.47917],"LGTS":[40.51972,22.97092],"LHBP":[47.43945,19.26194],"LIBD":[41.13805,16.765],"LIBP":[42.43722,14.18722],"LIBR":[40.66064,17.94812],"LICA":[38.90833,16.24167],"LICB":[36.99583,14.60889],"LICC":[37.46667,15.06389],"LICJ":[38.18195,13.09944],"LIEA":[40.63111,8.288611],"LIEE":[39.24722,9.056111],"LIEO":[40.89861,9.517777],"LIMC":[45.63,8.723056],"LIMF":[45.2025,7.649445],"LIML":[45.44944,9.278334],"LIPE":[44.53083,11.29694],"LIPH":[45.65089,12.19789],"LIPK":[44.19556,12.06972],"LIPQ":[45.8275,13.47222],"LIPX":[45.39639,10.88778],"LIPY":[43.61666,13.36028],"LIPZ":[45.50528,12.35194],"LIRA":[41.79945,12.59722],"LIRF":[41.80028,12.23889],"LIRN":[40.88445,14.29083],"LIRP":[43.68274,10.39554],"LIRQ":[43.80861,11.20278],"LJLJ":[46.22449,14.45605],"LKMT":[49.69611,18.11083],"LKPR":[50.10083,14.26],"LKTB":[49.15139,16.69389],"LLBG":[32.00945,34.88556],"LMML":[35.85754,14.47744],"LOWG":[46.99306,15.43917],"LOWL":[48.23528,14.18806],"LOWW":[48.11028,16.56972],"LPAZ":[36.97389,-25.17111],"LPFR":[37.01445,-7.965833],"LPLA":[38.76194,-27.09083],"LPPR":[41.23547,-8.677953],"LPPS":[33.07084,-16.34972],"LPPT":[38.77417,-9.134167],"LQSA":[43.82447,18.33178],"LRBC":[46.52195,26.91028],"LRBS":[44.50361,26.10361],"LRCK":[44.36222,28.48833],"LROP":[44.57111,26.085],"LRTR":[45.80972,21.33778],"LSGG":[46.23833,6.109445],"LSZH":[47.45806,8.548056],"LTAC":[40.12806,32.995],"LTAF":[36.98222,35.28028],"LTAH":[38.72583,30.60306],"LTAI":[36.90029,30.79301],"LTAP":[40.83139,35.52195],"LTAU":[38.77028,35.49528],"LTBA":[40.97611,28.81417],"LTBG":[40.31833,27.97778],"LTBJ":[38.28917,27.155],"LTBS":[36.7125,28.79139],"LTCC":[37.8925,40.20111],"LTCE":[39.95583,41.17056],"LTCG":[40.99583,39.78528],"LTCI":[38.46806,43.33222],"LTFE":[37.24944,27.66472],"LTFJ":[40.89833,29.30917],"LTFM":[41.27528,28.75194],"LUKK":[46.92778,28.93083],"LWSK":[41.96161,21.62143],"LYBE":[44.81944,20.30694],"LZIB":[48.17,17.21278],"MBPV":[21.77376,-72.26868],"MDLR":[18.4525,-68.91139],"MDPC":[18.57078,-68.36619],"MDPP":[19.7579,-70.57003],"MDSD":[18.42966,-69.66892],"MDST":[19.40611,-70.60472],"MGGT":[14.58327,-90.52747],"MHTG":[14.06026,-87.21741],"MKJP":[17.93556,-76.7875],"MKJS":[18.50367,-77.91338],"MMAA":[16.7571,-99.75382],"MMCM":[18.50464,-88.3268],"MMCZ":[20.52206,-86.92928],"MMGL":[20.52184,-103.3111],"MMMD":[20.93702,-89.65769],"MMMX":[19.43596,-99.07339],"MMMY":[25.77856,-100.107],"MMOX":[16.99859,-96.72604],"MMPB":[19.15814,-98.37151],"MMPR":[20.68007,-105.2542],"MMQT":[20.61738,-100.1857],"MMTM":[22.28982,-97.86441],"MMTO":[19.33709,-99.56603],"MMUN":[21.04274,-86.8732],"MMVR":[19.14578,-96.18736],"MMZO":[19.14476,-104.5585],"MNMG":[12.14174,-86.16977],"MPPA":[8.914964,-79.59962],"MPTO":[9.072222,-79.38333],"MRLB":[10.5934,-85.54448],"MROC":[9.993903,-84.20885],"MSLP":[13.44094,-89.05576],"MSSS":[13.69949,-89.11986],"MTCH":[19.73278,-72.19473],"MTPP":[18.58005,-72.29254],"MUCF":[22.15,-80.41417],"MUCL":[21.61611,-81.54556],"MUCM":[21.42028,-77.8475],"MUCU":[19.97,-75.83556],"MUHA":[22.98917,-82.40916],"MUHG":[20.78555,-76.315],"MUVR":[23.03444,-81.43528],"MWCR":[19.29278,-81.35777],"MYGF":[26.55869,-78.69555],"MYNN":[25.03896,-77.46623],"MZBZ":[17.53909,-88.3082],"NCRG":[-21.20126,-159.799],"NLWW":[-13.23833,-176.1992],"NSFA":[-13.83184,-171.998],"NSTU":[-14.33166,-170.7115],"NTAA":[-17.55667,-149.6114],"NTTG":[-14.95528,-147.6578],"NTTO":[-18.06417,-140.9572],"OBBI":[26.27083,50.63361],"OEDF":[26.4712,49.7979],"OEJN":[21.68111,39.15611],"OERK":[24.96278,46.70806],"OESK":[29.78517,40.09959],"OIFM":[32.75083,51.86278],"OIIE":[35.41611,51.15222],"OIII":[35.68889,51.31472],"OIKK":[30.27444,56.95111],"OIMM":[36.23417,59.645],"OISS":[29.54028,52.58861],"OITT":[38.13389,46.235],"OIZH":[29.47333,60.90333],"OJAI":[31.72413,35.99462],"OJAM":[31.9727,35.99157],"OJAQ":[29.61162,35.01807],"OKBK":[29.22677,47.97995],"OLBA":[33.81905,35.49003],"OMAA":[24.43306,54.65111],"OMAL":[24.26167,55.60917],"OMDB":[25.25278,55.36444],"OMDW":[24.91833,55.17556],"OMSJ":[25.32917,55.51611],"OOMS":[23.6002,58.2836],"OPIS":[33.54908,72.82565],"OPKC":[24.90856,67.16276],"OPLA":[31.52156,74.40457],"OPRK":[28.38542,70.2798],"ORBI":[33.26254,44.23458],"ORER":[36.23806,43.94667],"ORMM":[30.54907,47.66214],"OTHH":[25.27456,51.60838],"PHKO":[19.73877,-156.0456],"PHNL":[21.31782,-157.9202],"PHTO":[19.72026,-155.0485],"RCKH":[22.57694,120.3503],"RCTP":[25.08028,121.2322],"RJAA":[35.76528,140.3856],"RJBB":[34.43417,135.2328],"RJCC":[42.77528,141.6925],"RJCH":[41.77,140.8219],"RJFF":[33.58445,130.4517],"RJFK":[31.80333,130.7195],"RJGG":[34.85833,136.8053],"RJOO":[34.78444,135.4392],"RJSN":[37.95583,139.1117],"RJTT":[35.55333,139.7811],"RKJK":[35.90389,126.6158],"RKPK":[35.18056,128.938],"RKSI":[37.4625,126.4392],"RKSO":[37.09056,127.0297],"RKSS":[37.55695,126.7975],"RKTN":[35.89417,128.6589],"ROAH":[26.19333,127.6397],"RPLC":[15.18611,120.5603],"RPLL":[14.51,121.0136],"SAAR":[-32.90361,-60.78444],"SACO":[-31.31,-64.20834],"SADP":[-34.61,-58.6125],"SAEZ":[-34.82222,-58.53583],"SAME":[-32.83167,-68.79278],"SARE":[-27.45,-59.05611],"SARI":[-25.73722,-54.47333],"SASA":[-24.85972,-65.48695],"SAZM":[-37.93417,-57.57333],"SBAR":[-10.98528,-37.07333],"SBBE":[-1.384722,-48.47889],"SBBH":[-19.85194,-43.95055],"SBBR":[-15.87111,-47.91861],"SBBV":[2.841389,-60.69222],"SBCF":[-19.62444,-43.97194],"SBCG":[-20.46944,-54.67028],"SBCT":[-25.53167,-49.17611],"SBEG":[-3.041111,-60.05056],"SBFL":[-27.67028,-48.5525],"SBFZ":[-3.775833,-38.53222],"SBGL":[-22.81,-43.25056],"SBGR":[-23.43556,-46.47306],"SBKP":[-23.00694,-47.13445],"SBMA":[-5.368055,-49.13805],"SBMQ":[0.05083333,-51.07028],"SBPA":[-29.99472,-51.17111],"SBPL":[-9.3675,-40.56361],"SBPV":[-8.713611,-63.90278],"SBRB":[-9.868333,-67.89806],"SBRF":[-8.126389,-34.92278],"SBSG":[-5.768889,-35.36639],"SBSJ":[-23.22889,-45.87111],"SBSN":[-2.424722,-54.78583],"SBSV":[-12.90861,-38.3225],"SCDA":[-20.53528,-70.18139],"SCEL":[-33.39444,-70.7938],"SCFA":[-23.44444,-70.445],"SCIE":[-36.77139,-73.0625],"SCIP":[-27.16472,-109.4217],"SEGU":[-2.157778,-79.88389],"SELT":[-0.9066667,-78.61584],"SEMT":[-0.9455556,-80.67834],"SEQM":[-0.1241667,-78.35445],"SESA":[-2.205833,-80.98473],"SGAS":[-25.24109,-57.51683],"SGES":[-25.45529,-54.84177],"SKBO":[4.7016,-74.14694],"SKBQ":[10.88946,-74.78068],"SKCC":[7.927389,-72.51159],"SKCG":[10.44204,-75.51278],"SKCL":[3.543111,-76.38169],"SKRG":[6.164461,-75.423],"SLLP":[-16.5125,-68.19222],"SLVR":[-17.64611,-63.13778],"SMJP":[5.451389,-55.20083],"SOCA":[4.819722,-52.36195],"SPCL":[-8.377942,-74.5743],"SPHI":[-6.787478,-79.8281],"SPJC":[-12.02189,-77.11432],"SPQT":[-3.784739,-73.30881],"SPQU":[-16.34058,-71.5708],"SPRU":[-8.081708,-79.10865],"SPSO":[-13.7448,-76.22041],"SUDU":[-33.35639,-56.49611],"SUMU":[-34.83389,-56.02806],"SVMG":[10.9125,-63.96639],"SVMI":[10.60119,-66.99122],"SYCJ":[6.498333,-58.25482],"TAPA":[17.13611,-61.79389],"TBPB":[13.07464,-59.4921],"TFFF":[14.59222,-60.99639],"TFFR":[16.26417,-61.52583],"TGPY":[12.00425,-61.78619],"TISX":[17.70151,-64.80194],"TJSJ":[18.4394,-66.00214],"TKPK":[17.31118,-62.71869],"TLPL":[13.73222,-60.95195],"TNCA":[12.50138,-70.01523],"TNCB":[12.13081,-68.26742],"TNCC":[12.18891,-68.95969],"TNCM":[18.04093,-63.10896],"TTPP":[10.59528,-61.33722],"TXKF":[32.36404,-64.6787],"UAAA":[43.35556,77.04389],"UACC":[51.0225,71.46611],"UAKK":[49.67167,73.33528],"UATE":[43.86,51.09083],"UATG":[47.12194,51.82],"UATT":[50.24611,57.20555],"UBBB":[40.46972,50.05139],"UCFM":[43.06127,74.47751],"UDYZ":[40.14722,44.39583],"UEEE":[62.09333,129.7733],"UERP":[66.40056,112.0339],"UERR":[62.53472,114.0389],"UGKO":[42.17683,42.48272],"UGSB":[41.61018,41.59944],"UGTB":[41.66916,44.95479],"UHBB":[50.42556,127.4125],"UHHH":[48.52806,135.188],"UHSS":[46.88861,142.7175],"UHWW":[43.39806,132.1489],"UIAA":[52.02611,113.305],"UIBB":[56.37056,101.6986],"UIII":[52.26722,104.3947],"UIUU":[51.80972,107.4406],"UKBB":[50.34472,30.89333],"UKHH":[49.92694,36.29],"UKKK":[50.40194,30.45194],"UKLL":[49.80972,23.95833],"UKOO":[46.42611,30.67333],"ULAA":[64.60028,40.71667],"ULLI":[59.80028,30.2625],"ULMM":[68.78167,32.75111],"UMGG":[52.52694,31.01667],"UMMS":[53.8825,28.03083],"UNAA":[53.74,91.38528],"UNBB":[53.36333,83.53972],"UNEE":[55.27,86.1075],"UNKL":[56.17305,92.49333],"UNNT":[55.03333,82.59917],"UNOO":[54.96722,73.31028],"UOOO":[69.30861,87.32777],"URWW":[48.78028,44.33556],"USCC":[55.30583,61.50361],"USDD":[66.59055,66.61111],"USNN":[60.94861,76.48055],"USPP":[57.91444,56.02139],"USRR":[61.34389,73.40222],"USSS":[56.74306,60.80305],"USTR":[57.16833,65.31611],"UTAA":[37.99166,58.36195],"UTAK":[40.06333,53.00722],"UTDD":[38.54361,68.82472],"UTSS":[39.70057,66.98386],"UTTT":[41.25667,69.28167],"UUDD":[55.40917,37.9075],"UUEE":[55.9725,37.41306],"UUWW":[55.59917,37.27306],"UUYY":[61.64695,50.845],"UWGG":[56.23,43.78417],"UWKD":[55.60695,49.28028],"UWLW":[54.39944,48.80111],"UWOO":[51.79583,55.45667],"UWUU":[54.55778,55.87389],"UWWW":[53.50111,50.15389],"VAAH":[23.07119,72.62644],"VABB":[19.09155,72.86599],"VABP":[23.28692,77.33698],"VANP":[21.09171,79.04822],"VCBI":[7.180189,79.8853],"VDPP":[11.54653,104.8441],"VDSR":[13.41083,103.8122],"VECC":[22.65396,88.44672],"VGEG":[22.25702,91.8222],"VGHS":[23.84335,90.39778],"VHHH":[22.30892,113.9146],"VIAR":[31.71059,74.80016],"VIDP":[28.56873,77.11214],"VIJP":[26.82417,75.80247],"VILK":[26.76186,80.88343],"VLVT":[17.98822,102.5633],"VMMC":[22.14944,113.5914],"VOBL":[13.19887,77.70547],"VOCI":[10.15354,76.40722],"VOGO":[15.38084,73.82706],"VOHS":[17.24055,78.42889],"VOMM":[12.9951,80.1736],"VOPB":[11.64722,92.73306],"VOTV":[8.479484,76.92001],"VRMM":[4.19165,73.52914],"VTBD":[13.91437,100.6057],"VTBS":[13.68583,100.7489],"VTBU":[12.67961,101.0049],"VTCC":[18.77139,98.96278],"VTSP":[8.1125,98.30917],"VVDN":[16.04389,108.2003],"VVNB":[21.22167,105.8056],"VVTS":[10.82056,106.6608],"VYMD":[21.70107,95.97746],"VYYY":[16.90727,96.13324],"WADD":[-8.7475,115.1692],"WARR":[-7.380814,112.7863],"WIDD":[1.118889,104.1139],"WIII":[-6.123611,106.6611],"WIMM":[3.642222,98.88528],"WIPP":[-2.900278,104.7],"WMKJ":[1.640556,103.6703],"WMKK":[2.743281,101.698],"WMKP":[5.295556,100.2722],"WSSS":[1.359211,103.9893],"ZBAA":[40.07333,116.5983],"ZBHH":[40.84833,111.8233],"ZBTJ":[39.12333,117.345],"ZBYN":[37.74833,112.63],"ZGGG":[23.39333,113.3083],"ZGKL":[25.21667,110.0383],"ZGNN":[22.61,108.1733],"ZGSZ":[22.63833,113.8117],"ZHHH":[30.78369,114.2081],"ZLDH":[40.16333,94.81],"ZLLL":[36.51344,103.6208],"ZLXN":[36.53167,102.0383],"ZLXY":[34.445,108.75],"ZMCK":[47.64695,106.82],"ZPPP":[25.105,102.9417],"ZSAM":[24.545,118.1267],"ZSHC":[30.22833,120.4333],"ZSJN":[36.85833,117.215],"ZSNJ":[31.74333,118.8633],"ZSPD":[31.145,121.7933],"ZSSS":[31.19667,121.335],"ZUCK":[29.72,106.64],"ZUUU":[30.58,103.9483],"ZUXC":[27.99,102.1833],"ZWSH":[39.545,76.02167],"ZWTN":[37.04,79.86166],"ZWWW":[43.90833,87.475],"ZYHB":[45.625,126.2517],"ZYTL":[38.96667,121.54],"ZYTX":[41.64167,123.485]}')},449:e=>{"use strict";e.exports=JSON.parse('{"2515N":[25,-15],"2520N":[25,-20],"2523N":[25,-23],"2620N":[26,-20],"2622N":[26,-22],"2720N":[27,-20],"2723N":[27,-23],"2820N":[28,-20],"2822N":[28,-22],"2920N":[29,-20],"2A17N":[25.52,-17.95],"3015N":[30,-15],"96GDV":[25,-16.636667],"AGUMO":[25.710556,-18.596111],"APASO":[25,-19.504633],"ARACO":[28.432519,-17.452331],"ARENA":[25.728086,-14.358589],"ARTEM":[28.409036,-16.034147],"BAMEL":[28.111333,-16.87725],"BASUX":[28.621278,-16.7585],"BETAN":[28.410264,-14.251903],"BIPET":[25,-16.358806],"BRICK":[29.591367,-16.372894],"CABEL":[25,-14.941136],"CABOJ":[26.138889,-14.643889],"CANDE":[28.323583,-15.88475],"CANIS":[27.999825,-14.648167],"COLON":[28.3285,-15.242031],"DELAP":[28.297111,-15.564194],"DEPIS":[28.187917,-17.822472],"DEREV":[26.723172,-15.211056],"DIRUP":[31.502472,-16.994944],"DRANO":[27.655656,-15.506769],"ECKOS":[28.040089,-15.33965],"ENETA":[27.924889,-14.994014],"FAYTA":[28.108569,-14.1381],"GANTA":[28.274869,-17.170528],"GOMER":[28,-17.333333],"GURKA":[30.434,-15.850258],"ISLET":[28.142786,-15.295128],"ISORU":[28.626989,-15.236125],"KASAS":[29.986417,-15.768719],"KONBA":[31.300833,-15.301667],"KONDA":[27.744931,-15.806853],"KOPUD":[28.139722,-14.507778],"KOSIB":[28.586667,-14.213333],"LALTO":[27.698119,-15.003958],"LARYS":[28.871831,-14.834289],"LIMAL":[25,-17.625581],"LOMAS":[27.720444,-15.691056],"LORPO":[28.215833,-14.651667],"MADAS":[28.220975,-15.378922],"MAPED":[28.918778,-14.083],"MARBA":[28.558494,-16.570908],"MATUD":[27.479194,-15.867194],"MERAN":[27.8565,-16.185667],"MITLA":[31.308333,-14.082222],"MOROD":[28.454603,-17.210964],"MOVAS":[27.726028,-16.801389],"NASOL":[28.840458,-17.427206],"NELSO":[31.682914,-17.456994],"NERVO":[29.338578,-15.652008],"NEXUX":[30,-21],"ODEGI":[26.894583,-16.290111],"OPTIK":[27.002456,-17.008594],"ORVEK":[25.975,-18.813889],"PEPAT":[28.428333,-14.186667],"PEPES":[30.617772,-14.265825],"PITAB":[30.352869,-16.449236],"R002P":[28.803031,-16.294683],"R010P":[28.803575,-16.252281],"R024P":[28.792056,-16.179531],"R041P":[28.75775,-16.098711],"R053P":[28.721636,-16.050314],"R082P":[28.604783,-15.976219],"R108P":[28.484547,-15.972181],"R129P":[28.394061,-16.013108],"R191P":[28.269947,-16.290992],"R216P":[28.303056,-16.416283],"R240P":[28.376097,-16.511028],"R265P":[28.481447,-16.565253],"R272P":[28.513733,-16.570703],"R300P":[28.641497,-16.547719],"R328P":[28.744742,-16.459331],"R356P":[28.799203,-16.326156],"RASEP":[28.694167,-14.446667],"REMGI":[27.090194,-15.269611],"ROSTA":[28.256056,-20],"ROTUM":[25,-15.78675],"RULOB":[28.751389,-14.016667],"SAMAR":[30.899722,-14.415556],"SARAY":[29.758633,-14.157431],"SIERA":[28.083333,-14.491667],"SIRPU":[28.165028,-14.106639],"SORAD":[30,-25],"TANGO":[27.613333,-15.262778],"TENAR":[28.048431,-15.935892],"TERFE":[28.190417,-16.129472],"TESEL":[28.488286,-16.833256],"THAIS":[28.572225,-15.517825],"TMA2 ":[25,-18.28],"TODKO":[28.316667,-15.345222],"TOMOS":[27.5475,-15.553258],"TUPIK":[27.890833,-14.745556],"UDATI":[26.197778,-16.786389],"VANUR":[28.707944,-17.610444],"VIDRI":[26.894583,-17.039917],"070A ":[69.5,-70],"070B ":[68.5,-70],"070C ":[67.5,-70],"070D ":[66.5,-70],"070N ":[70.857689,-70],"4550N":[45,-50],"4555N":[45,-55],"4560N":[45,-60],"4561N":[45,-61],"4562N":[45,-62],"4563N":[45,-63],"4564N":[45,-64],"4565N":[45,-65],"4566N":[45,-66],"4567N":[45,-67],"4635N":[46,-35],"4640N":[46,-40],"4645N":[46,-45],"4650N":[46,-50],"4655N":[46,-55],"4660N":[46,-60],"4735N":[47,-35],"4740N":[47,-40],"4745N":[47,-45],"4750N":[47,-50],"4760N":[47,-60],"4835N":[48,-35],"4840N":[48,-40],"4845N":[48,-45],"4850N":[48,-50],"4860N":[48,-60],"4930N":[49,-30],"4935N":[49,-35],"4940N":[49,-40],"4945N":[49,-45],"4950N":[49,-50],"4960N":[49,-60],"4A64N":[44.166667,-64],"5030N":[50,-30],"5035N":[50,-35],"5040N":[50,-40],"5045N":[50,-45],"5050N":[50,-50],"5055N":[50,-55],"5060N":[50,-60],"5065N":[50,-65],"5130N":[51,-30],"5135N":[51,-35],"5140N":[51,-40],"5145N":[51,-45],"5150N":[51,-50],"5160N":[51,-60],"5170N":[51,-70],"5230N":[52,-30],"5235N":[52,-35],"5240N":[52,-40],"5245N":[52,-45],"5250N":[52,-50],"5260N":[52,-60],"5265N":[52,-65],"5270N":[52,-70],"5330N":[53,-30],"5335N":[53,-35],"5340N":[53,-40],"5345N":[53,-45],"5350N":[53,-50],"5360N":[53,-60],"5370N":[53,-70],"5430N":[54,-30],"5435N":[54,-35],"5440N":[54,-40],"5445N":[54,-45],"5450N":[54,-50],"5455N":[54,-55],"5460N":[54,-60],"5470N":[54,-70],"5530N":[55,-30],"5535N":[55,-35],"5540N":[55,-40],"5545N":[55,-45],"5550N":[55,-50],"5555N":[55,-55],"5560N":[55,-60],"5561N":[55,-61],"5562N":[55,-62],"5563N":[55,-63],"5564N":[55,-64],"5565N":[55,-65],"5566N":[55,-66],"5567N":[55,-67],"5568N":[55,-68],"5569N":[55,-69],"5570N":[55,-70],"5630N":[56,-30],"5631N":[56,-31],"5635N":[56,-35],"5640N":[56,-40],"5645N":[56,-45],"5650N":[56,-50],"5655N":[56,-55],"5660N":[56,-60],"5670N":[56,-70],"5730N":[57,-30],"5735N":[57,-35],"5740N":[57,-40],"5745N":[57,-45],"5750N":[57,-50],"5755N":[57,-55],"5760N":[57,-60],"5770N":[57,-70],"5830N":[58,-30],"5835N":[58,-35],"5840N":[58,-40],"5845N":[58,-45],"5850N":[58,-50],"5855N":[58,-55],"5860N":[58,-60],"5870N":[58,-70],"5930N":[59,-30],"5935N":[59,-35],"5940N":[59,-40],"5950N":[59,-50],"5955N":[59,-55],"5960N":[59,-60],"5970N":[59,-70],"5A70N":[56.416667,-70],"6030N":[60,-30],"6035N":[60,-35],"6040N":[60,-40],"6055N":[60,-55],"6058N":[60,-58],"6060N":[60,-60],"6064N":[60,-64],"6130N":[61,-30],"6135N":[61,-35],"6140N":[61,-40],"6150N":[61,-50],"6155N":[61,-55],"6160N":[61,-60],"6170N":[61,-70],"6235N":[62,-35],"6240N":[62,-40],"6250N":[62,-50],"6255N":[62,-55],"6260N":[62,-60],"6270N":[62,-70],"6360N":[63,-60],"6460N":[64,-60],"6560N":[65,-60],"6570N":[65,-70],"6650N":[66,-50],"6670N":[66,-70],"6750N":[67,-50],"6770N":[67,-70],"6860N":[68,-60],"6870N":[68,-70],"6960N":[69,-60],"6970N":[69,-70],"6A21N":[69.666667,-21.5],"6A70N":[69.25,-70],"7065N":[70,-65],"7070N":[70,-70],"7160N":[71,-60],"7170N":[71,-70],"7260N":[72,-60],"7270N":[72,-70],"7370N":[73,-70],"7470N":[74,-70],"7560N":[75,-60],"8070N":[80,-70],"ACADN":[44.666667,-64],"ADRAX":[45.958611,-66.198333],"ADSAM":[69.921147,-63.219894],"ALKOB":[51.480106,-64.024186],"ALLRY":[50.5,-52],"ALSAK":[64,-70],"ALSOP":[56.866667,-62.166667],"AMASS":[61.038153,-68.515992],"ANDRE":[68.5025,-51.024167],"ARAME":[51.338319,-67.462178],"ARDEE":[45.123442,-64.386064],"ATLAN":[46.76,-57.115556],"AVPUT":[65.033333,-60],"AVUTI":[57.466667,-58],"AYROU":[65.315003,-64],"BAGLE":[46.091694,-66.903667],"BEPEG":[63,-70],"BERAK":[65.5,-70],"BERUS":[63,-63],"BEZED":[64.866667,-67],"BITRA":[45.106389,-61.878889],"BIVPU":[46.034839,-67.780967],"BOBBS":[51.001667,-61.999167],"BODGO":[53.249411,-60.569842],"BOKTO":[56.966667,-58],"BOPUT":[68.959436,-61.941169],"BORUB":[52.539167,-63.123333],"BRIDG":[47.146389,-59.271389],"BROME":[53.500075,-66.999325],"BUBIX":[49.327586,-67.374836],"BUDAR":[50,-52],"BUDUM":[80,-69.25],"CAAPE":[45.300008,-65.296142],"CADIL":[47.735,-60.425],"CANEL":[67.983856,-60.764025],"CASTR":[48.866667,-66.833333],"CLAVY":[64.233333,-59],"COPUR":[59.7,-67],"CUDDY":[56.7,-57],"DANOL":[45.698389,-67.788072],"DAPAK":[73.75,-70],"DARUB":[67,-60],"DAYSE":[46.795,-58.606667],"DOPHN":[44.555033,-55.482339],"DORYY":[56.033333,-57],"DUSEN":[44.9974,-64.196483],"DUSER":[49.130333,-54.507167],"DUTUM":[63.866667,-67],"DUVBI":[56,-61],"DUVIN":[43.706167,-67],"DUVOK":[44.927036,-65.286572],"ELERI":[42.5745,-64.390183],"ELSIR":[49.5,-52],"EMBIM":[45.439197,-67.465761],"EMBOK":[63.466667,-58],"ENNSO":[55.533333,-57],"EPMAN":[66,-60],"EXPOS":[52,-67],"FASSA":[58.7,-67],"FEDDY":[61.700222,-66.998844],"FINNI":[49.001667,-57.74],"FORTE":[46.28,-57.66],"FOXXE":[54.486667,-59.288333],"FRAZR":[51.616667,-62.716667],"FRENN":[45.971744,-66.214786],"FROSS":[48.153333,-61.241667],"GAYBL":[42.833333,-62],"GOLFE":[52.263889,-63.435],"GRAYY":[45.746667,-56.71],"GRIBS":[61.5,-63],"GRUPI":[43.866733,-58.837528],"HARBO":[47.594011,-53.355786],"HEMMI":[45.055,-55.533333],"HIDIG":[44.680622,-64.016106],"HINGE":[57.408333,-65],"HITOR":[49.085,-61.7],"HOIST":[55.033333,-57],"IBERG":[49,-52],"IGTAS":[45.082911,-62.989708],"IKBUN":[48.8,-56.065],"IKMAN":[62.5,-63],"IKNAL":[58.264167,-67.718056],"IKNOG":[65.904572,-58.583492],"IMAMA":[46.738283,-67.777553],"INGUM":[71.881111,-66.281667],"IRBIM":[58.653333,-60.532622],"IRDUV":[46.274042,-65.158797],"IRGUB":[45.695411,-67.8194],"IRLOK":[54.533333,-57],"ITPAX":[46.113931,-65.160389],"JANJO":[54.033333,-57],"JELCO":[60.7,-67],"JETAM":[46.734583,-67.762153],"JEXAT":[44.888011,-66.970683],"JIGGS":[47.42,-59.803333],"JOOPY":[48.5,-52],"JOVIE":[54.166667,-67],"JULES":[54.853897,-66.845219],"JULET":[72.767286,-68.664953],"KAGLY":[63.5,-63],"KATLO":[45.296944,-63.050833],"KATMU":[46.088333,-60.011667],"KATPA":[52.703122,-67.007447],"KAVPO":[54.498553,-66.772392],"KELNO":[45.131567,-64.189561],"KENKI":[65,-63],"KENSU":[45.974842,-65.95265],"KETLA":[62.466667,-58],"KEVLU":[44.422778,-64.183333],"KLIPS":[57.700158,-66.999197],"KODIK":[53.466667,-57.2],"KONCH":[51.8,-60.216667],"LAKES":[57.998333,-63.266667],"LARDR":[45.296944,-63.519444],"LEXAK":[47.401594,-53.403286],"LEXOD":[48.516667,-66.333333],"LIBOR":[61.966667,-58],"LOHIL":[54.840394,-68.999372],"LOMSI":[53.1,-56.783333],"LOMTA":[57.203333,-62.62],"LOPRO":[48.7225,-57.703611],"LOPVI":[59.266667,-64.25],"MALPE":[46.722222,-63.404167],"MAXAR":[61.466667,-58],"MCKEE":[56.671667,-67],"MEDPA":[72.661044,-67.713336],"MELDI":[52.733333,-56.35],"MIBNO":[60.583333,-62.533333],"MIGLI":[49.525833,-58.246667],"MIILS":[46.873611,-67.048333],"MIVAD":[47.679444,-54.150833],"MOATT":[58.025,-59.928333],"MOWND":[45.376667,-66.657222],"MUNBO":[52.124167,-64.799722],"MUSAK":[48,-52],"MUSLO":[60.166667,-62],"MUSVA":[64,-63],"MUVEP":[58.116333,-68.383667],"N4560":[45.5,-60],"N4760":[47.5,-60],"N4860":[48.5,-60],"N4960":[49.5,-60],"N5060":[50.5,-60],"N5070":[50.5,-70],"N5160":[51.5,-60],"N5170":[51.5,-70],"N5260":[52.5,-60],"N5270":[52.5,-70],"N5370":[53.5,-70],"N5470":[54.5,-70],"N5570":[55.5,-70],"N5770":[57.5,-70],"N5870":[58.5,-70],"N5970":[59.5,-70],"N6070":[60.5,-70],"N6170":[61.5,-70],"N6270":[62.5,-70],"N6370":[63.5,-70],"N6470":[64.5,-70],"N7070":[70.5,-70],"N7170":[71.5,-70],"N7270":[72.5,-70],"NADMA":[71.067208,-64.926264],"NALDI":[64.5,-63],"NANSO":[44.488333,-56.071667],"NAPLO":[50.227222,-58.765278],"NEEKO":[52.4,-55.833333],"NICSO":[47.5,-52],"NIFTY":[60.966667,-58],"NORUS":[51.887872,-66.617239],"NOTOP":[45.452633,-62.011914],"NUTBY":[45.687536,-63.246694],"OBSAT":[51.333333,-69.5],"ODKAP":[50.883889,-66.059167],"OLESU":[48.197347,-63.256433],"OMSAT":[47,-52],"OTAKU":[63.116667,-68.866667],"PAULO":[45.253003,-63.335458],"PEKRO":[53.156389,-64.1025],"PELSI":[58.083333,-67],"PELTU":[52.1,-55.166667],"PEPKI":[59.733333,-61.616667],"PEPRA":[44.937222,-56.231667],"PERLU":[47.290147,-54.046161],"PIDSO":[60.466667,-58],"PIKNA":[50.866667,-59.25],"PORGY":[56.316667,-58.083333],"PORTI":[46.5,-52],"PRAWN":[57.203333,-59.18],"PUPUN":[50.370158,-66.020636],"PUXOP":[45.944722,-66.44],"QUBIS":[47.533375,-67.766136],"RADUN":[59.966667,-58],"RELIC":[46,-52],"RENNY":[48.413333,-61.816667],"RIKAL":[51.8,-54.533333],"ROBBE":[51.143333,-70],"RODBO":[60.083333,-65.166667],"RUBDA":[45.794167,-56.547778],"RUBKO":[52.333333,-60.966667],"SATIS":[50.422278,-59.981589],"SATUX":[45.933494,-66.186731],"SAVRY":[59.466667,-58],"SAXAN":[51.483333,-53.85],"SCOTS":[44.5,-64],"SELAT":[49.032294,-54.535544],"SEMTO":[59.233333,-67],"SENVI":[44.733583,-64.165564],"SERBO":[52.101667,-60.716389],"SERNI":[55.0875,-66.883167],"SETVO":[60.416667,-67],"SHAIK":[51.557939,-66.546803],"SILRO":[47,-58.583333],"SINGA":[59.216667,-61.083333],"SPOTE":[52.47,-67],"SUPRY":[45.5,-52],"SUTKO":[46.515833,-56.821667],"TAFFY":[47.373381,-67.3039],"TAGRA":[47.178333,-57.078889],"TALGO":[44.166667,-52.433333],"TASTI":[52.663333,-61.653611],"TEALS":[55.648611,-67],"TEFFO":[62.800244,-66.998808],"TEXED":[47.545833,-54.152778],"TEXUN":[53,-61.85],"TIGOR":[47.4152,-54.113928],"TOXIT":[58.966667,-58],"TUDEP":[51.166667,-53.233333],"TUNNI":[60,-70],"UBTEV":[48.746833,-65.034],"UDMAR":[57.583333,-62.916667],"UDMOG":[50.207925,-66.674583],"UKOSO":[44.894722,-63.641944],"UMESI":[50.833333,-52.6],"UMETI":[47.58,-59.258056],"URTAK":[58.466667,-58],"USBAM":[47.6295,-63.208167],"VERCH":[58.215556,-65],"VERTU":[51.504444,-59.756944],"VESMI":[57.966667,-58],"VIGDU":[45.472358,-67.483856],"VIGMA":[44.340875,-66.643511],"VIGSO":[50.298492,-60.943147],"VINSI":[47.898333,-57.366667],"VITON":[65.9,-58.583333],"VODEK":[63.833333,-70],"VOKAR":[53.5,-62.566667],"VOKET":[51.5,-67],"WOPAC":[48.656711,-67.307767],"WUPUP":[46.653792,-67.732661],"XIBUL":[45.294939,-67.454464],"2527N":[25,-27],"2528N":[25,-28],"2529N":[25,-29],"2530N":[25,-30],"2531N":[25,-31],"2533N":[25,-33],"2534N":[25,-34],"2535N":[25,-35],"2536N":[25,-36],"2626N":[26,-26],"2635N":[26,-35],"2730N":[27,-30],"2735N":[27,-35],"2830N":[28,-30],"2835N":[28,-35],"2930N":[29,-30],"2935N":[29,-35],"2A25N":[25.666667,-25],"2B35N":[26.266667,-35],"3026N":[30,-26],"3027N":[30,-27],"3028N":[30,-28],"3029N":[30,-29],"3030N":[30,-30],"3031N":[30,-31],"3032N":[30,-32],"3033N":[30,-33],"3034N":[30,-34],"3035N":[30,-35],"3120N":[31,-20],"3125N":[31,-25],"3130N":[31,-30],"3135N":[31,-35],"3220N":[32,-20],"3225N":[32,-25],"3230N":[32,-30],"3235N":[32,-35],"3319N":[33,-19],"3320N":[33,-20],"3325N":[33,-25],"3330N":[33,-30],"3335N":[33,-35],"3419N":[34,-19],"3420N":[34,-20],"3425N":[34,-25],"3430N":[34,-30],"3435N":[34,-35],"3515N":[35,-15],"3516N":[35,-16],"3517N":[35,-17],"3518N":[35,-18],"3519N":[35,-19],"3520N":[35,-20],"3521N":[35,-21],"3522N":[35,-22],"3523N":[35,-23],"3525N":[35,-25],"3526N":[35,-26],"3527N":[35,-27],"3528N":[35,-28],"3529N":[35,-29],"3530N":[35,-30],"3532N":[35,-32],"3535N":[35,-35],"3620N":[36,-20],"3625N":[36,-25],"3630N":[36,-30],"3635N":[36,-35],"3720N":[37,-20],"3725N":[37,-25],"3730N":[37,-30],"3735N":[37,-35],"3820N":[38,-20],"3825N":[38,-25],"3830N":[38,-30],"3835N":[38,-35],"3920N":[39,-20],"3925N":[39,-25],"3930N":[39,-30],"3935N":[39,-35],"3A25N":[39.183333,-25],"3A35N":[32.533333,-35],"3B16N":[32.773333,-16.561667],"3C35N":[36.616667,-35],"4017N":[40,-17],"4018N":[40,-18],"4019N":[40,-19],"4020N":[40,-20],"4021N":[40,-21],"4022N":[40,-22],"4023N":[40,-23],"4024N":[40,-24],"4025N":[40,-25],"4026N":[40,-26],"4027N":[40,-27],"4030N":[40,-30],"4035N":[40,-35],"4120N":[41,-20],"4125N":[41,-25],"4130N":[41,-30],"4135N":[41,-35],"4216N":[42,-16],"4220N":[42,-20],"4225N":[42,-25],"4230N":[42,-30],"4235N":[42,-35],"4310N":[43,-10],"4315N":[43,-15],"4320N":[43,-20],"4325N":[43,-25],"4330N":[43,-30],"4335N":[43,-35],"4410N":[44,-10],"4415N":[44,-15],"4420N":[44,-20],"4425N":[44,-25],"4430N":[44,-30],"4435N":[44,-35],"4508N":[45,-8],"4515N":[45,-15],"4516N":[45,-16],"4517N":[45,-17],"4518N":[45,-18],"4519N":[45,-19],"4520N":[45,-20],"4521N":[45,-21],"4524N":[45,-24],"4525N":[45,-25],"4527N":[45,-27],"4530N":[45,-30],"4532N":[45,-32],"4535N":[45,-35],"4610N":[46,-10],"4615N":[46,-15],"4620N":[46,-20],"4625N":[46,-25],"4630N":[46,-30],"4710N":[47,-10],"4715N":[47,-15],"4720N":[47,-20],"4725N":[47,-25],"4730N":[47,-30],"4809N":[48,-9],"4810N":[48,-10],"4815N":[48,-15],"4820N":[48,-20],"4825N":[48,-25],"4830N":[48,-30],"4920N":[49,-20],"4925N":[49,-25],"4A13N":[44.416667,-13],"5016N":[50,-16],"5020N":[50,-20],"5025N":[50,-25],"5120N":[51,-20],"5125N":[51,-25],"5220N":[52,-20],"5225N":[52,-25],"5320N":[53,-20],"5325N":[53,-25],"5420N":[54,-20],"5425N":[54,-25],"5516N":[55,-16],"5517N":[55,-17],"5520N":[55,-20],"5525N":[55,-25],"5620N":[56,-20],"5625N":[56,-25],"5720N":[57,-20],"5725N":[57,-25],"5815N":[58,-15],"5820N":[58,-20],"5825N":[58,-25],"5915N":[59,-15],"5920N":[59,-20],"5925N":[59,-25],"5945N":[59,-45],"6000E":[60,0],"6015N":[60,-15],"6016N":[60,-16],"6019N":[60,-19],"6020N":[60,-20],"6025N":[60,-25],"6045N":[60,-45],"6050N":[60,-50],"6101N":[61,-1],"6112N":[61,-12],"6114N":[61,-14],"6115N":[61,-15],"6116N":[61,-16],"6120N":[61,-20],"6125N":[61,-25],"6145N":[61,-45],"6210N":[62,-10],"6215N":[62,-15],"6220N":[62,-20],"6225N":[62,-25],"6230N":[62,-30],"6245N":[62,-45],"6310N":[63,-10],"6315N":[63,-15],"6320N":[63,-20],"6322N":[63,-22],"6330N":[63,-30],"6335N":[63,-35],"6340N":[63,-40],"6345N":[63,-45],"6350N":[63,-50],"6355N":[63,-55],"6400E":[64,0],"6410N":[64,-10],"6415N":[64,-15],"6420N":[64,-20],"6430N":[64,-30],"6435N":[64,-35],"6440N":[64,-40],"6445N":[64,-45],"6450N":[64,-50],"6455N":[64,-55],"6500E":[65,0],"6501N":[65,-1],"6503E":[65,0.125],"6505N":[65,-5],"6510N":[65,-10],"6515N":[65,-15],"6520N":[65,-20],"6530N":[65,-30],"6535N":[65,-35],"6536N":[65,-36],"6540N":[65,-40],"6542N":[65,-42],"6545N":[65,-45],"6546N":[65,-46],"6548N":[65,-48],"6550N":[65,-50],"6555N":[65,-55],"6610N":[66,-10],"6620N":[66,-20],"6630N":[66,-30],"6634N":[66,-34],"6638N":[66,-38],"6640N":[66,-40],"6642N":[66,-42],"6645N":[66,-45],"6648N":[66,-48],"6710N":[67,-10],"6719N":[67,-19],"6720N":[67,-20],"6730N":[67,-30],"6732N":[67,-32],"6734N":[67,-34],"6740N":[67,-40],"6744N":[67,-44],"6746N":[67,-46],"6748N":[67,-48],"6810N":[68,-10],"6820N":[68,-20],"6826N":[68,-26],"6830N":[68,-30],"6832N":[68,-32],"6840N":[68,-40],"6844N":[68,-44],"6850N":[68,-50],"6910N":[69,-10],"6920N":[69,-20],"6924N":[69,-24],"6926N":[69,-26],"6930N":[69,-30],"6940N":[69,-40],"6944N":[69,-44],"6946N":[69,-46],"6950N":[69,-50],"6951N":[69,-51],"6A22N":[69.5,-22.666667],"6A44N":[66,-44.616667],"6B22N":[69.416667,-22.5],"7010N":[70,-10],"7020N":[70,-20],"7026N":[70,-26],"7028N":[70,-28],"7030N":[70,-30],"7040N":[70,-40],"7046N":[70,-46],"7050N":[70,-50],"7060N":[70,-60],"7110N":[71,-10],"7120N":[71,-20],"7123N":[71,-23],"7124N":[71,-24],"7128N":[71,-28],"7130N":[71,-30],"7140N":[71,-40],"7146N":[71,-46],"7148N":[71,-48],"7150N":[71,-50],"7210N":[72,-10],"7220N":[72,-20],"7221N":[72,-21],"7224N":[72,-24],"7230N":[72,-30],"7240N":[72,-40],"7248N":[72,-48],"7250N":[72,-50],"7257N":[72,-57],"7310N":[73,-10],"7320N":[73,-20],"7321N":[73,-21],"7324N":[73,-24],"7330N":[73,-30],"7340N":[73,-40],"7350N":[73,-50],"7360N":[73,-60],"7410N":[74,-10],"7420N":[74,-20],"7421N":[74,-21],"7430N":[74,-30],"7440N":[74,-40],"7450N":[74,-50],"7460N":[74,-60],"7510N":[75,-10],"7520N":[75,-20],"7521N":[75,-21],"7530N":[75,-30],"7540N":[75,-40],"7550N":[75,-50],"7570N":[75,-70],"7610N":[76,-10],"7620N":[76,-20],"7621N":[76,-21],"7630N":[76,-30],"7640N":[76,-40],"7650N":[76,-50],"7660N":[76,-60],"7670N":[76,-70],"7710N":[77,-10],"7720N":[77,-20],"7721N":[77,-21],"7730N":[77,-30],"7740N":[77,-40],"7750N":[77,-50],"7760N":[77,-60],"7770N":[77,-70],"7810N":[78,-10],"7820N":[78,-20],"7821N":[78,-21],"7830N":[78,-30],"7840N":[78,-40],"7850N":[78,-50],"7860N":[78,-60],"7870N":[78,-70],"7910N":[79,-10],"7920N":[79,-20],"7921N":[79,-21],"7930N":[79,-30],"7940N":[79,-40],"7950N":[79,-50],"7960N":[79,-60],"7970N":[79,-70],"7A20N":[79.583333,-20],"8010N":[80,-10],"8020N":[80,-20],"8021N":[80,-21],"8030N":[80,-30],"8040N":[80,-40],"8050N":[80,-50],"8060N":[80,-60],"8069N":[80,-69],"ABALO":[32.331008,-18.130353],"ABANA":[67.468611,-50.968333],"ABIBA":[72,-57.181111],"ABUSU":[32.867011,-16.635542],"ABVID":[35.448056,-15.332778],"ADAGO":[32.956894,-16.345311],"ADARA":[51.5,-15],"ADAVA":[65.523589,-51.257569],"ADBUS":[54.416667,-12.5],"ADODO":[58.5,-10],"ADROX":[44.346639,-8.814444],"ADSOL":[37.958739,-26.076656],"ADVUN":[65.85525,-18.435342],"AGNAX":[60.957469,2.316667],"AGORI":[57,-13],"AKIVO":[59.964444,-9.5],"AKOSU":[61.180556,2.658114],"ALDAN":[62.980278,-18.763889],"ALLOY":[61.356111,1.788333],"AMDEP":[51.566667,-11.216667],"AMINI":[66.516944,-50.395],"AMIXI":[37.478333,-25.51],"AMLAD":[56.264444,-10],"AMTAP":[58.373711,-9.5],"ANAVA":[39.899561,-25.408939],"APSOV":[55.823056,-10],"APTEK":[63.212114,1.015303],"ARMED":[42.5,-14],"ARNAR":[64.680833,-18.550278],"ASDEB":[42.515917,-8.491889],"ASKJA":[64.870833,-17.262222],"ASKUR":[65.195556,-18.691667],"ASMOD":[68.985908,-51.934269],"ASPEX":[38.319622,-28.157992],"ASRUN":[63.557494,-20.581761],"ASTAN":[65.417778,-39.995556],"ASVID":[64.630278,-48.378889],"ATSIX":[60,-10],"ATSUR":[50,-14],"AUDUN":[62.246111,-48.899444],"AXIXE":[76.530006,-68.761514],"BABAN":[54,-12],"BADEG":[66.316667,-47.5],"BAGTO":[64.806944,-47],"BAGUD":[77.275778,-68.667769],"BAKUG":[66.068483,-51.143122],"BALIX":[59,-10],"BAMBU":[60.319861,2.458958],"BANAL":[42,-15],"BANIX":[38.405547,-28.113025],"BARKU":[60.605,-9.41],"BARUD":[62.5,0],"BASLU":[63.188744,-21.272142],"BAULA":[64.939444,-14.693056],"BAVAS":[39,-23.678353],"BAXER":[62.696667,-26.014722],"BEDAL":[42.104667,-7.753944],"BEDRA":[49,-15],"BEGAS":[45,-9],"BEGID":[56.5,-14],"BEKUN":[37.948269,-23.234622],"BERAX":[43.252053,-8.176667],"BERSO":[74.466667,-20.6],"BERUX":[45,-11],"BESGA":[60.789722,-7.912778],"BETRO":[61.781944,2.831944],"BEXET":[54,-14],"BIGPI":[31.951944,-17.248889],"BILLY":[60.019578,-8.568744],"BILTO":[56.5,-15],"BIMBO":[31.421453,-16.032878],"BIMGO":[49.5,-14],"BIRMI":[42.294444,-8.198944],"BIRNA":[63.333056,-24.316067],"BLAMI":[64.48,-19.819722],"BOBLO":[61.867778,1.724722],"BRAVO":[73.25,-61.416667],"BREKI":[62.538333,-19.546667],"BRUSI":[65.078889,-15.731111],"BUNAV":[46.5,-8.75],"BUREM":[61.903889,-6.603889],"BURIX":[63.176917,1.818644],"CELLO":[62.238333,-20.468333],"CHARL":[38.365833,-24.701944],"CONNY":[61.9,-5.583333],"CURAN":[79.916667,-60.583333],"DARIM":[47.065278,-55.445833],"DEGUN":[33.418708,-15.658297],"DELES":[63.494636,-24.576475],"DELTA":[37.770278,-24.078611],"DENOK":[64.129108,-15.140642],"DETOX":[41,-15],"DEVBI":[60.715,-8.769444],"DEVBO":[68.583333,-52],"DEVNU":[65.004722,-35.879722],"DEVOL":[53.890278,-10.434167],"DINIM":[51,-15],"DISGU":[69.243889,-53.528056],"DIXIS":[45,-10],"DOBOB":[67.873222,-50.989569],"DOGAL":[54,-15],"DOKAS":[37.232389,-23.364406],"DOLER":[39.267933,-26.380072],"DOLIP":[52,-12],"DONIB":[55.719167,-7.695556],"DOPOD":[62.897222,-26.360556],"DOSIT":[68.392778,-52.122222],"DOSUN":[60.1175,-6.394167],"DOTEB":[66.074817,-51.276997],"DRESR":[76.51,-69.666667],"EBEXI":[65.716667,-41],"EBIDI":[62.8925,1.636944],"EDERI":[66.168489,-51.998639],"EGILL":[65.034167,-14.679444],"EKROL":[42,-15.583333],"ELBEN":[38.702683,-28.269978],"ELBIM":[33.108056,-17.1175],"ELDIS":[63.676028,-24.760583],"ELKIL":[65.573833,-14.336219],"ELKOG":[60.446564,-9.5],"ELRAD":[33.5075,-16.331111],"ELREX":[63.116667,-26.653333],"ELSOX":[51,-14],"ELTEP":[42.616528,-7.783694],"ELVUR":[65.103611,-14.8375],"EMPER":[49,-9],"EPAKA":[33.731111,-16.125],"EPENI":[63.383333,-26.911667],"EPUNA":[50.5,-14],"ERAKA":[58,-10],"ERANO":[38.179472,-28.316644],"ERPES":[40,-15],"ERSER":[61.5,0],"ETARI":[55.5,-15],"ETIKI":[48,-8.75],"ETILO":[57.5,-10],"ETROX":[36.402561,-24.024581],"ETSOM":[57.891944,-9.5],"EVABU":[62.317367,-44],"EVBAK":[49,-10],"EVBEV":[57.786111,-7.678056],"EVDIR":[61.995833,-49.647778],"EVNAL":[57.408517,-9.5],"EVONI":[32.196389,-16.178889],"EXODO":[33.757778,-16.319444],"FAKSO":[61.138522,2.1443],"FELLI":[65.354167,-15.173889],"FIR01":[61,-12.566667],"FIR02":[61,-16.5],"FOXT1":[36.802222,-23.741389],"FOXT2":[36.448611,-23.893889],"FRINI":[78.2,-67.7],"FUSUL":[32.601453,-16.661906],"GAKTU":[63.96,-20.724722],"GALPA":[34.398153,-14.730375],"GANGI":[66.894444,-49.680833],"GATBO":[65.194444,-47],"GEGRU":[61.017494,1.269828],"GEKLO":[65.6209,-14.015028],"GELPI":[26.595389,-14.854361],"GEMVA":[62.378056,1.728889],"GIGOM":[66.558333,-54.291667],"GIKAR":[34.166039,-14.030058],"GILPO":[66.47145,-51.055267],"GINAG":[67.806217,-51.831875],"GINGA":[56.925,-9.5],"GINSU":[36.292414,-27.647708],"GIPER":[51,-12],"GIRIN":[77.412675,-68.517144],"GIRIX":[37.209533,-25.219839],"GIRNU":[60.473611,-0.619444],"GIRPA":[75.1,-42.316667],"GIRUG":[64.108306,-24.873894],"GISGA":[72.566667,-38.466667],"GISTI":[53,-14],"GISTU":[64.122222,-27.169444],"GOBEG":[29,-25],"GODUT":[68.343056,-52.416389],"GOKIK":[64.501389,-27.056944],"GOLF ":[35.851944,-24.887222],"GOMOS":[37.013439,-30.057214],"GOMUP":[57,-10],"GONAN":[45,-14],"GORBI":[78.066667,-65.666667],"GOSGA":[32.082119,-16.631194],"GUNPA":[61,0],"GUNSO":[49.052797,-11.768225],"GUNTI":[39,-15],"HIDRA":[44.5,-13],"HOTEL":[36.013056,-25.956389],"IBROD":[56.5,-10],"IBVAS":[61.206911,1.830636],"IDIGO":[32.840072,-16.340442],"IDREL":[34.341667,-16.291667],"INBAN":[64.833333,-50],"INBOX":[38.368311,-33.363619],"INBUL":[38.495408,-30],"INDES":[65.166667,-26.368333],"INDIA":[37.1175,-27.882222],"INGAN":[64.562206,-24.487425],"INGAS":[69.221389,-51.525556],"INGOG":[64.093019,-15.311758],"INS03":[75.333333,-20],"INS04":[78.833333,-40],"INSAD":[28,-25],"IPRUK":[64.100833,2.713611],"IPTON":[62,0],"IRKID":[33.924883,-18.069231],"IRSAN":[33.16675,-16.504489],"ISVIG":[63,0],"IXIKU":[27,-25],"JULIT":[38.117778,-29.725],"KAYAK":[64.225,-39.995556],"KEILA":[63.984444,-22.158889],"KEKOS":[32.449183,-16.227139],"KELDO":[65.57,-51.759167],"KELUX":[71,-53.336389],"KEMOS":[66.958889,-52.220556],"KESEG":[60.016111,-6.015556],"KESIX":[56.95,-14],"KETID":[30,-20],"KILO ":[38.465833,-30.391389],"KITAP":[62.411667,-47.995833],"KOGAD":[49.5,-15],"KOGAG":[64.631111,-47],"KOKER":[39.90585,-33.733972],"KOKIB":[54.5,-14],"KOLIT":[40.548583,-33.389117],"KOMUT":[38,-15],"KOPAS":[44,-13],"KOPIP":[46.93085,-7.503825],"KORAV":[43.653103,-7.865586],"KOXIN":[65.509722,-50.956389],"KUGAM":[66.473056,-51.130833],"KUGUR":[55.5,-10],"KUKAK":[68.199731,-53.067622],"KUKEK":[63.868333,2.485556],"KULOX":[77.184922,-68.967897],"KUNUK":[68.506667,-50.872778],"KUNUL":[60.55,-42.633333],"KUVOX":[58.083056,-7.606667],"KUXOV":[26,-25],"LADOX":[38.94715,-28.021192],"LANAN":[74.833333,-68.566667],"LAPEX":[47,-8],"LAPLU":[65.369278,-14.575611],"LAPTU":[25,-25],"LARUX":[62.621667,-10],"LASNO":[48.598228,-9],"LEKVA":[51.5,-14],"LENSI":[39,-20],"LEPRU":[32,-14.801111],"LIDRO":[33.6674,-15.949597],"LILGO":[67.436389,-51.431389],"LIMA ":[39.501389,-31.679444],"LIMRI":[52,-15],"LINRA":[51.579722,-10.032222],"LODLA":[51.936111,-10.528056],"LODNO":[65.033333,-40],"LONDU":[52.916667,-12.5],"LUCIE":[74.916667,-66.8],"LUKAL":[41.253,-32.355892],"LUKAN":[33.474444,-14.931389],"LUKIT":[40.196858,-30],"LULUB":[63.133333,1.730278],"LUNDI":[63.645278,-20.821389],"LUPOV":[42,-15.083333],"LUSEN":[60.5,-10],"LUTAK":[37,-15],"LUTER":[64.117961,-20.361033],"LUTOV":[55.239444,-10],"LUXOV":[65.8775,-53.149722],"MAARE":[76.907333,-68.239167],"MADAT":[32.161869,-17.085222],"MADIX":[65.268889,-52.822778],"MALOT":[53,-15],"MAMAV":[60.491328,2.824625],"MAMUP":[32.092778,-15.556389],"MANOX":[36.194342,-15.390219],"MANSE":[72.883333,-64.916667],"MASIK":[65.967778,-39.995278],"MATIK":[61,-8.066667],"MAVEX":[33.190511,-16.355722],"MEGAT":[43.498869,-7.596469],"METIL":[63.971944,-21.526111],"MIKE ":[39.603889,-31.642778],"MIKLA":[63.848333,-17.574167],"MIMKU":[56,-10],"MIPRU":[38.273611,-26.364842],"MISTE":[43.35535,-8.085203],"MODGO":[60.445278,-7.665278],"MOGLO":[55.5,-14],"MOLOX":[61.031919,2.624075],"MOXAL":[64.083333,-18],"MUDOS":[43.5,-13],"MURTA":[64.135833,-21.811111],"MYRAR":[64.702222,-22.148056],"N3915":[39.5,-15],"N4015":[40.5,-15],"N4115":[41.5,-15],"N4213":[42.5,-13],"NAKOM":[77.634136,-69.995108],"NALAK":[65.714167,-52.564722],"NALAN":[61,-6],"NANSI":[63.135278,-46.995833],"NARBO":[42.139814,-8.228289],"NASBA":[49,-13],"NASBU":[63.946672,-20.348181],"NASET":[60.530833,1.955],"NASOP":[65.566667,-34.583333],"NAVIX":[35.520469,-16.234342],"NAVPO":[37.621133,-25.316372],"NEBAV":[61.066286,1.98825],"NEBIN":[53.5,-15],"NEGOV":[32.736389,-15.869167],"NERTU":[49,-14],"NETKI":[55,-14],"NEXEP":[43.198889,-9.499806],"NIDUL":[32.365228,-17.352922],"NIKAV":[33.348525,-16.873494],"NILAV":[45,-13.416667],"NINEX":[58.855556,-9.5],"NIPRI":[33,-14.123333],"NOLMU":[42.634278,-8.333917],"NONNI":[65.313611,-19.400278],"NONRO":[65.183333,-30],"NOTMA":[38.812569,-28.056147],"NOV  ":[39.908611,-28.548333],"NUTKA":[64.557222,-51.449167],"NYGAR":[68.232222,-52.311389],"OBESA":[36.657139,-14.245808],"OBUBA":[57.777778,-7.555278],"OBUDA":[39.113611,-31.032778],"ODANU":[49.916667,-12.5],"ODPEX":[59.409903,-9.5],"ODVOX":[35.031389,-14.448889],"OKRUB":[63,1.277742],"OLDEK":[38.315514,-28.439036],"OLGON":[53.5,-14],"OLNOS":[63.8675,-21.294167],"OMOBI":[37.890683,-24.812661],"OMOKO":[48.838972,-12],"ORTAV":[59.5,-10],"ORTIS":[31.406944,-16.556917],"OSBEX":[60.60765,2.774317],"OSBON":[61,-5],"OSBOX":[56.806389,-12.801667],"OSGIT":[77.307889,-69.290839],"OSKUM":[63.712222,-20.442778],"OSLEV":[30,-22],"OSTED":[62.783333,-42],"OXYPT":[63.633333,-46],"PASAS":[45,-13],"PECKY":[34.530297,-15.337892],"PELUS":[33.445156,-17.071203],"PEMOS":[61,-4],"PENUX":[65.749444,-17.759444],"PERUR":[65.4409,-18.959397],"PETEK":[42.678919,-12],"PETUD":[37.498556,-25.805528],"PETUX":[62.733333,-19.116667],"PEVAN":[55.783333,-11.333333],"PEVAP":[35.246944,-14.818333],"PEVAR":[66.699167,-46.939722],"PEXIL":[65.403889,-18.051111],"PIBIL":[30,-23],"PIGET":[55.833333,-12.5],"PIKIL":[56,-15],"PITAX":[45,-12],"PIVON":[42.503944,-8.552472],"PIXUM":[63.358206,-20.872761],"POBAR":[32.964072,-16.164622],"PODEL":[37.617061,-25.699597],"POKAX":[63.122592,2.892978],"PONTE":[43.298169,-8.121958],"PORSU":[62.636667,-42.995833],"RAKIS":[63.584722,-27.044722],"RAKUN":[33.556947,-15.781264],"RALOV":[63.882997,-24.867733],"RASTO":[61.266256,2.78635],"RATKA":[49.5,-8],"RATSU":[61,-10],"RAVBA":[66.316667,-46.283333],"REDSO":[37.647953,-25.795369],"REGHI":[48,-8],"REGLA":[38.855147,-26.13875],"REKVA":[64.441667,-20.821111],"RESNO":[55,-15],"RETEN":[43,-13],"RETUR":[65.538611,-17.624722],"REVNU":[54.466667,-10.116667],"RILED":[52.5,-14],"RIMIV":[34.171111,-15.594167],"RIMTU":[43.322389,-8.366889],"RIMUM":[63.075833,-21.689444],"RIPEL":[42.283058,-10.816194],"RIPOD":[30,-24],"RIVAK":[46,-8],"RIVEM":[43.744333,-8.647083],"RIXUN":[61,-3],"RODAS":[37.772372,-25.992844],"RODEL":[50.5,-15],"RODIL":[38.079014,-27.606739],"ROGLO":[63,0.083],"ROLAR":[34.211453,-15.205744],"ROSIE":[65.539167,-51.466111],"ROSTI":[63.406389,-14.112222],"ROTIN":[63.916667,-27.160278],"RULET":[34.251594,-14.915544],"RUMUX":[62.374167,-20],"RUXIN":[56.281944,-12],"SABAG":[65.266667,-35.283333],"SAVIS":[75.35,-63.666667],"SBMCI":[65.937889,-23.978072],"SEPAL":[47,-8.75],"SIMON":[68.494167,-51.221667],"SIPRU":[39.179922,-27.889539],"SISLO":[64.3,-20],"SIVIR":[46,-8.75],"SKALM":[65.628611,-22.36],"SKOTT":[64.785833,-22.870833],"SOBVI":[65.181944,-43.828889],"SOLGI":[38.6249,-28.032672],"SOMAX":[50,-15],"SOMUL":[38.222622,-27.316942],"SOPEN":[64.7,-26.925],"SORIR":[64.403514,-24.692089],"SORUD":[61.087361,2.022222],"SOSAR":[61,-2],"SOSIT":[64.816667,-30],"SOSOV":[44.983,-7.885028],"SOSUK":[61.450664,2.143328],"SOVED":[56,-14],"STEFA":[75.1,-65.083333],"SUBUD":[64.566667,-52.25],"SUDUL":[68.166667,-31.516667],"SUKAK":[66.9425,-50.489167],"SUKED":[64.994444,-26.619444],"SUMEL":[63.7825,-21.789444],"SUMUD":[72.616667,-38.5],"SUNOT":[57,-15],"SUPIK":[37.920725,-26.059525],"SUVAN":[51.416667,-12.5],"SVINA":[64.409722,-15.440833],"TABOM":[32.225606,-16.457561],"TAKAS":[49,-8],"TAMEL":[48.728611,-10.497222],"TELMU":[35.637672,-14.530594],"TERTU":[64.434167,-21.728611],"TIBLI":[65.2325,-14.781222],"TIBRA":[64.292778,-20.928333],"TIDVI":[38.124097,-26.151403],"TIMTO":[38.387853,-27.321422],"TIVLU":[46.5,-8],"TOBEB":[60.312206,2.705242],"TOBED":[33.237642,-16.473361],"TOBOR":[52.5,-15],"TOLAN":[65.603056,-49.348611],"TOMAS":[73.733333,-58.583333],"TULTA":[48.576944,-8],"TURON":[42.067925,-8.563417],"TURSO":[64.7,-20],"TUSEX":[37.823672,-26.092989],"TUXIV":[33.720556,-17.640833],"TUXOS":[55.973333,-7.526389],"ULBER":[46.975,-56.018056],"ULKIM":[65.487756,-13.901869],"UMLER":[47.5,-8.75],"UMOXA":[47.5,-8],"UNLID":[51.209167,-10.724722],"UNVIG":[66.5275,-51.533889],"URATU":[36.696111,-25.153889],"VALDI":[61.214428,0],"VAMLA":[60,-4],"VAXAN":[65.416667,-34.9],"VEBIL":[61.214722,2.273611],"VELAS":[38.658858,-28.358506],"VENER":[54.5,-15],"VESIB":[60.782192,2.896167],"VETEL":[33.340833,-16.361389],"VEXIN":[75.330556,-62],"XAMUS":[62.625,1.721111],"XAVAL":[32.724167,-16.498611],"XEBIK":[42.753722,-8.06475],"XEGEN":[32.316389,-16.016111],"XERES":[42.023894,-10.067975],"XERON":[32.381314,-16.943503],"XETBO":[52,-14],"XINGA":[33.049353,-17.142514],"XOGRA":[38.403461,-29.021497],"XORVU":[39.630492,-30.652083],"XRAY ":[64.64,-26.971667],"XUVAP":[37.589214,-25.216931],"2650N":[26,-50],"2655N":[26,-55],"2745N":[27,-45],"2747N":[27,-47],"2748N":[27,-48],"2749N":[27,-49],"2750N":[27,-50],"2761N":[27,-61],"2955N":[29,-55],"3065N":[30,-65],"2540N":[25,-40],"2545N":[25,-45],"2550N":[25,-50],"2553N":[25,-53],"2555N":[25,-55],"2565N":[25,-65],"2570N":[25,-70],"2630N":[26,-30],"2640N":[26,-40],"2645N":[26,-45],"2660N":[26,-60],"2665N":[26,-65],"2670N":[26,-70],"2740N":[27,-40],"2741N":[27,-41],"2742N":[27,-42],"2744N":[27,-44],"2746N":[27,-46],"2751N":[27,-51],"2752N":[27,-52],"2753N":[27,-53],"2754N":[27,-54],"2755N":[27,-55],"2756N":[27,-56],"2770N":[27,-70],"2840N":[28,-40],"2845N":[28,-45],"2850N":[28,-50],"2855N":[28,-55],"2865N":[28,-65],"2870N":[28,-70],"2940N":[29,-40],"2945N":[29,-45],"2950N":[29,-50],"2965N":[29,-65],"2970N":[29,-70],"3040N":[30,-40],"3045N":[30,-45],"3050N":[30,-50],"3053N":[30,-53],"3054N":[30,-54],"3055N":[30,-55],"3060N":[30,-60],"3070N":[30,-70],"3140N":[31,-40],"3145N":[31,-45],"3150N":[31,-50],"3155N":[31,-55],"3160N":[31,-60],"3165N":[31,-65],"3170N":[31,-70],"3240N":[32,-40],"3245N":[32,-45],"3250N":[32,-50],"3255N":[32,-55],"3260N":[32,-60],"3265N":[32,-65],"3270N":[32,-70],"3340N":[33,-40],"3345N":[33,-45],"3350N":[33,-50],"3355N":[33,-55],"3360N":[33,-60],"3365N":[33,-65],"3370N":[33,-70],"3440N":[34,-40],"3445N":[34,-45],"3450N":[34,-50],"3455N":[34,-55],"3460N":[34,-60],"3465N":[34,-65],"3470N":[34,-70],"3540N":[35,-40],"3545N":[35,-45],"3550N":[35,-50],"3555N":[35,-55],"3560N":[35,-60],"3563N":[35,-63],"3565N":[35,-65],"3570N":[35,-70],"3640N":[36,-40],"3645N":[36,-45],"3650N":[36,-50],"3655N":[36,-55],"3660N":[36,-60],"3665N":[36,-65],"3670N":[36,-70],"3740N":[37,-40],"3745N":[37,-45],"3750N":[37,-50],"3755N":[37,-55],"3760N":[37,-60],"3765N":[37,-65],"3770N":[37,-70],"3840N":[38,-40],"3845N":[38,-45],"3850N":[38,-50],"3855N":[38,-55],"3856N":[38,-56],"3860N":[38,-60],"3865N":[38,-65],"3940N":[39,-40],"3945N":[39,-45],"3947N":[39,-47],"3950N":[39,-50],"3955N":[39,-55],"3960N":[39,-60],"3A45N":[30.666667,-45],"3A55N":[34.566667,-55],"3A65N":[37.25,-65],"3B45N":[36.633333,-45],"3B55N":[39.116667,-55],"3C45N":[33.666667,-45],"3C55N":[38.133333,-55],"4040N":[40,-40],"4045N":[40,-45],"4050N":[40,-50],"4055N":[40,-55],"4060N":[40,-60],"4065N":[40,-65],"4140N":[41,-40],"4145N":[41,-45],"4150N":[41,-50],"4155N":[41,-55],"4160N":[41,-60],"4165N":[41,-65],"4167N":[41,-67],"4240N":[42,-40],"4245N":[42,-45],"4246N":[42,-46],"4250N":[42,-50],"4255N":[42,-55],"4256N":[42,-56],"4260N":[42,-60],"4265N":[42,-65],"4340N":[43,-40],"4345N":[43,-45],"4350N":[43,-50],"4355N":[43,-55],"4440N":[44,-40],"4445N":[44,-45],"4450N":[44,-50],"4455N":[44,-55],"4540N":[45,-40],"4545N":[45,-45],"4A45N":[40.333333,-45],"4A65N":[40.833333,-65],"4B45N":[40,-45.5],"AJGUB":[45.325378,-67.692794],"ALLEX":[44.416667,-67],"AMENO":[29,-60],"AMZIE":[43.106667,-67.286667],"ANTIG":[31.484683,-68.060503],"ANVER":[35.252028,-65.687792],"AVAST":[41.922306,-64.879306],"AWSOM":[33.027081,-67.341194],"AYTTE":[28,-60],"BALOO":[34.405167,-62.137167],"BALTN":[30.690328,-67.605453],"BAXIE":[43.360842,-67.798569],"BBPVK":[45.696092,-67.803122],"BEXUM":[33.302314,-69.812475],"BOBBO":[32.36975,-67.204211],"BOBTU":[44.117222,-52.822222],"BOVIC":[34.873483,-66.667581],"BRADD":[43.15,-67],"BRKZZ":[27.320519,-64.962347],"CANME":[45.487858,-67.621333],"CARAC":[43,-60],"CATZZ":[31.082547,-66.941722],"CAXIX":[44.936178,-67.062272],"CEYAN":[44.816517,-67.516908],"CLXTN":[35.722956,-68.556072],"CUZWA":[45.296803,-67.466172],"DARUX":[36.159878,-69.455086],"DASER":[34.138508,-67.577622],"DAVES":[42.945103,-67.507747],"DOVEY":[41.116667,-67],"DRYED":[38.632278,-66.667461],"DUNIG":[28.823367,-68.740792],"DUNOM":[44.901931,-67],"DUPAN":[25.512506,-64.581919],"DUPOX":[27.940969,-68.541106],"EBONY":[44.902411,-67.156569],"EMAKO":[31.396414,-68.238683],"ENAPI":[33.206025,-68.105992],"FEDUT":[44.795728,-67.379531],"FIVZE":[25,-60],"FLAMO":[33.376781,-66.309719],"FODAG":[44.805544,-67.448386],"GECAL":[29.424492,-65.421364],"GUICE":[32.740356,-66.161364],"HERIN":[42.002714,-67.790614],"JAROM":[44.166667,-54.883333],"JEBBY":[43.072222,-57.868056],"JIMAC":[32.357511,-68.23155],"JOBOC":[40.116667,-67],"KANNI":[42.633333,-67],"KAYYT":[38.877175,-67.572856],"KINER":[36.574231,-68.287447],"KOZIK":[26.807431,-63.750453],"KURTS":[30.166356,-64.495211],"LAZEY":[33.589,-61.485],"LITTL":[32.373547,-66.076842],"LOMPI":[44,-57],"LUCTI":[25,-69.093722],"LUNKR":[35.336814,-66.383364],"MEGGG":[28.361133,-67.528522],"MUNEY":[38.5,-64.964361],"MURLO":[44.089722,-55.927778],"N3770":[37.5,-70],"N3865":[38.5,-65],"NOSID":[34.109939,-68.914489],"NOVOK":[42.381597,-61.201561],"NUMBR":[32.670556,-61.192222],"OVAPI":[37.454594,-66.809519],"PIERC":[32.035164,-65.999486],"PIREX":[29.374361,-64.321189],"QRTET":[31.75225,-67.077364],"RABAL":[26.7245,-69.453894],"RAFIN":[44.883333,-51.804722],"RNSYN":[46.042725,-67.781014],"ROOFE":[31.674711,-65.917725],"SAILE":[41.185769,-67.895711],"SBCDC":[46.034394,-67.781],"SBGSK":[46.010236,-67.781086],"SEAVR":[29.698858,-63.073617],"SEBIS":[27.758214,-69.675139],"SELIM":[38.5,-62.668933],"SHEIL":[29.909839,-66.708806],"SICKL":[31.05915,-65.779583],"SIFEN":[27,-60],"SLATN":[39.116667,-67],"SOORY":[38.5,-60.267583],"TASNI":[30.900311,-69.224944],"TILED":[37.266094,-68.973267],"TONEY":[30.223119,-64.423433],"TOPPS":[45.340181,-67.738642],"TUSKY":[43.565,-67],"VESRA":[25.474794,-68],"VINSO":[27.083122,-67.242017],"VITOL":[41.783333,-67],"WHALE":[42.197778,-67],"WINGZ":[31.641833,-61.289],"WUBAT":[44.756642,-67.462986],"WUMUB":[44.724039,-67.472714],"YEPSY":[31.864622,-62.287394],"ZONEM":[44.642525,-67.496956],"ZUDEK":[44.733819,-67.469797]}')},199:e=>{"use strict";e.exports="SFJ:BGSF01THU:BGTL02KEF:BIKF03PRN:BKPR04YBG:CYBG05YEG:CYEG06YFB:CYFB05YHZ:CYHZ07YJT:CYJT08YMX:CYMX05YOD:CYOD06YOW:CYOW05YQB:CYQB05YQM:CYQM07YQT:CYQT09YQX:CYQX08YQY:CYQY0aYUL:CYUL05YVO:CYVO05YVR:CYVR0bYWG:CYWG0cYXE:CYXE0dYYB:CYYB05YYC:CYYC06YYJ:CYYJ0bYYQ:CYYQ0cYYR:CYYR0eYYT:CYYT08YYZ:CYYZ05YZF:CYZF06ALG:DAAG0fDJG:DAAJ0fTMR:DAAT0fCZL:DABC0fORN:DAOO0fBMW:DATM0fAZR:DAUA0fELG:DAUE0fGHA:DAUG0fHME:DAUH0fINZ:DAUI0fIAM:DAUZ0fCOO:DBBB0gOUA:DFFD0hBOY:DFOO0hACC:DGAA0iTML:DGLE0iABJ:DIAP0jBYK:DIBK0jABV:DNAA0kLOS:DNMM0kPHC:DNPO0kNIM:DRRN0lAJY:DRZA0lMIR:DTMB0mNBE:DTNH00TUN:DTTA0mDJE:DTTJ0mSFA:DTTX0mLRL:DXNG0nLFW:DXXX0nBRU:EBBR0oCRL:EBCI0oOST:EBOS0oBER:EDDB0pDRS:EDDC0pFRA:EDDF0pHAM:EDDH0pCGN:EDDK0pDUS:EDDL0pMUC:EDDM0pNUE:EDDN0pLEJ:EDDP0pSTR:EDDS0pHAJ:EDDV0pBRE:EDDW0pHHN:EDFH0pXFW:EDHI0pFKB:EDSB0pTLL:EETN0qHEL:EFHK0rIVL:EFIV0rRVN:EFRO0rTMP:EFTP0rTKU:EFTU0rBFS:EGAA0sBHX:EGBB0sMAN:EGCC0sCWL:EGFF0sBRS:EGGD0sLPL:EGGP0sLTN:EGGW0sLGW:EGKK0sLHR:EGLL0sNCL:EGNT0sMME:EGNV0sEMA:EGNX0sGLA:EGPF0sEDI:EGPH0sPIK:EGPK0sSYY:EGPO0sCBG:EGSC0sNWI:EGSH0sSTN:EGSS0sEXT:EGTE0sAMS:EHAM0tMST:EHBK0tEIN:EHEH0tRTM:EHRD0tORK:EICK0uDUB:EIDW0uSNN:EINN0uBLL:EKBI0vCPH:EKCH0vLUX:ELLX0wBOO:ENBO0xBGO:ENBR0xOSL:ENGM0xLKL:ENNA0xLYR:ENSB0yTOS:ENTC0xTRF:ENTO0xTRD:ENVA0xSVG:ENZV0xGDN:EPGD0zKRK:EPKK0zKTW:EPKT0zPOZ:EPPO0zSZZ:EPSC0zWAW:EPWA0zWRO:EPWR0zGOT:ESGG10JKG:ESGJ10NYO:ESKN10MMX:ESMS10KRN:ESNQ10OSD:ESNZ10VST:ESOW10ARN:ESSA10VBY:ESSV10RIX:EVRA11KUN:EYKA12PLQ:EYPA12VNO:EYVI12BFN:FABL13CPT:FACT13DUR:FALE13JNB:FAOR13UTN:FAUP13GBE:FBSK14BZV:FCBB15PNR:FCPP15BGF:FEFF16SSG:FGSL17MRU:FIMP18DLA:FKKD19NSI:FKYS19LUN:FLKK1aHAH:FMCH1bDZA:FMCZ1cRUN:FMEE1dTNR:FMMI1eMJN:FMNM1eNOS:FMNN1eNOV:FNHU1fLAD:FNLU1fLUO:FNUE1fPOG:FOOG1gLBV:FOOL1gMVB:FOON1gTMS:FPST1hBEW:FQBR1iMPM:FQMA1iAPL:FQNP1iSEZ:FSIA1jNDJ:FTTJ1kFYT:FTTY1kHRE:FVRG00LLW:FWKI1lGFY:FYGF1mKMP:FYKT1mWDH:FYWH1mFIH:FZAA1nMDK:FZEA1nFKI:FZIC1oKND:FZOA1oFBM:FZQA1oKGA:FZUA1oBKO:GABS1pBJL:GBYD1qFUE:GCFV1rLPA:GCLP1rACE:GCRR1rTFS:GCTS1rTFN:GCXO1rFNA:GFLL1sROB:GLRB1tAGA:GMAD1uFEZ:GMFF1uRBA:GMME1uVIL:GMMH1uESU:GMMI1uEUN:GMML1uCMN:GMMN1uRAK:GMMX1uTNG:GMTT1uDSS:GOBD1vNKC:GQNO00NDB:GQPP1wCKY:GUCY1xSID:GVAC1yADD:HAAB1zBJM:HBBA20JIB:HDAM21ALY:HEAX22HBE:HEBA22ABS:HEBL22CAI:HECA22HRG:HEGN22LXR:HELX22SSH:HESH22ASW:HESN22ASM:HHAS23NBO:HKJK24MBA:HKMO24KGL:HRYR25PZU:HSPN26KRT:HSSK00DAR:HTDA27JRO:HTKJ27ZNZ:HTZA27EBB:HUEN28ABQ:KABQ29ATL:KATL2aAUS:KAUS2bBAD:KBAD2bBDL:KBDL2aBFI:KBFI2cBGR:KBGR2aBHM:KBHM2bBIL:KBIL29BNA:KBNA2bBOI:KBOI2dBOS:KBOS2aBWI:KBWI2aBYH:KBYH2bCHS:KCHS2aCIU:KCIU2aCLE:KCLE2aCLT:KCLT2aCMH:KCMH2aCVG:KCVG2aDEN:KDEN29DFW:KDFW2bDLH:KDLH2bDSM:KDSM2bDTW:KDTW2aEWR:KEWR2aFLL:KFLL2aFWA:KFWA2aGEG:KGEG2cGRB:KGRB2bGTF:KGTF29IAD:KIAD2aIAG:KIAG2aIAH:KIAH2bICT:KICT2bIDA:KIDA2dIND:KIND2aJAN:KJAN2bJAX:KJAX2aJFK:KJFK2aLAS:KLAS2cLAX:KLAX2cLGA:KLGA2aMCI:KMCI2bMCO:KMCO2aMEM:KMEM2bMIA:KMIA2aMKE:KMKE2bMSP:KMSP2bMSY:KMSY2bMWH:KMWH2cOAK:KOAK2cOKC:KOKC2bONT:KONT2cORD:KORD2bORF:KORF2aPAE:KPAE2cPBI:KPBI2aPDX:KPDX2cPHL:KPHL2aPHX:KPHX2ePIT:KPIT2aRDU:KRDU2aRFD:KRFD2bRIC:KRIC2aRNO:KRNO2cRSW:KRSW2aSAN:KSAN2cSAT:KSAT2bSEA:KSEA2cSFO:KSFO2cSGF:KSGF2bSLC:KSLC29SMF:KSMF2cSTL:KSTL2bSWF:KSWF2aSYR:KSYR2aTPA:KTPA2aTUS:KTUS2eTYS:KTYS2aTIA:LATI2fBOJ:LBBG2gPDV:LBPD2gSOF:LBSF2gVAR:LBWN2gLCA:LCLK2hPFO:LCPH2hDBV:LDDU2iSPU:LDSP2iZAG:LDZA2iZAD:LDZD2iALC:LEAL2jLEI:LEAM2jOVD:LEAS2jBIO:LEBB2jBCN:LEBL2jGRO:LEGE2jIBZ:LEIB2jLEN:LELN2jMAD:LEMD2jAGP:LEMG2jMAH:LEMH2jPMI:LEPA2jREU:LERS2jSLM:LESA2jSCQ:LEST2jTOJ:LETO2jVLC:LEVC2jVLL:LEVD2jVIT:LEVT2jZAZ:LEZG2jSVQ:LEZL2jBOD:LFBD2kLIG:LFBL2kTLS:LFBO2kPUF:LFBP2kLDE:LFBT2kBIQ:LFBZ2kETZ:LFJL2kBIA:LFKB2kCLY:LFKC2kFSC:LFKF2kAJA:LFKJ2kCFE:LFLC2kLYS:LFLL2kGNB:LFLS2kCHR:LFLX2kQIE:LFMI2kMRS:LFML2kNCE:LFMN2kPGF:LFMP2kMPL:LFMT2kBVA:LFOB2kXCR:LFOK2kCDG:LFPG2kORY:LFPO2kLIL:LFQQ2kBES:LFRB2kDOL:LFRG2kLRT:LFRH2kRNS:LFRN2kUIP:LFRQ2kNTE:LFRS2kMLH:LFSB2kEPL:LFSG2kSXB:LFST2kTLN:LFTH2kFNI:LFTW2kATH:LGAV2lVOL:LGBL2lQQO:LGEL2lHER:LGIR2lKLX:LGKL2lCFU:LGKR2lLXS:LGLM2lJMK:LGMK2lRHO:LGRP2lCHQ:LGSA2lJTR:LGSR2lSKG:LGTS2lBUD:LHBP2mBRI:LIBD2nPSR:LIBP2nBDS:LIBR2nSUF:LICA2nCIY:LICB2nCTA:LICC2nPMO:LICJ2nAHO:LIEA2nCAG:LIEE2nOLB:LIEO2nMXP:LIMC2nTRN:LIMF2nLIN:LIML2nBLQ:LIPE2nTSF:LIPH2nFRL:LIPK2nTRS:LIPQ2nVRN:LIPX2nAOI:LIPY2nVCE:LIPZ2nCIA:LIRA2nFCO:LIRF2nNAP:LIRN2nPSA:LIRP2nFLR:LIRQ2nLJU:LJLJ2oOSR:LKMT2pPRG:LKPR2pBRQ:LKTB2pTLV:LLBG2qMLA:LMML2rGRZ:LOWG2sLNZ:LOWL2sVIE:LOWW2sSMA:LPAZ2tFAO:LPFR2uTER:LPLA2tOPO:LPPR2uPXO:LPPS2uLIS:LPPT2uSJJ:LQSA2vBCM:LRBC2wBBU:LRBS2wCND:LRCK2wOTP:LROP2wTSR:LRTR2wGVA:LSGG2xZRH:LSZH2xESB:LTAC2yADA:LTAF2yAFY:LTAH2yAYT:LTAI2yMZH:LTAP2yASR:LTAU2yISL:LTBA2yBDM:LTBG2yADB:LTBJ2yDLM:LTBS2yDIY:LTCC2yERZ:LTCE2yTZX:LTCG2yVAN:LTCI2yBJV:LTFE2ySAW:LTFJ2yIST:LTFM2yKIV:LUKK2zSKP:LWSK30BEG:LYBE04BTS:LZIB31PLS:MBPV32LRM:MDLR33PUJ:MDPC33POP:MDPP33SDQ:MDSD33STI:MDST33GUA:MGGT34TGU:MHTG35KIN:MKJP36MBJ:MKJS36ACA:MMAA37CTM:MMCM38CZM:MMCZ38GDL:MMGL37MID:MMMD39MEX:MMMX37MTY:MMMY37OAX:MMOX37PBC:MMPB37PVR:MMPR37QRO:MMQT37TAM:MMTM37TLC:MMTO37CUN:MMUN38VER:MMVR37ZLO:MMZO37MGA:MNMG3aBLB:MPPA3bPTY:MPTO3bLIR:MRLB3cSJO:MROC3cSAL:MSLP3dILS:MSSS3dCAP:MTCH3ePAP:MTPP3eCFG:MUCF3fCYO:MUCL3fCMW:MUCM3fSCU:MUCU3fHAV:MUHA3fHOG:MUHG3fVRA:MUVR3fGCM:MWCR3gFPO:MYGF3hNAS:MYNN3hBZE:MZBZ3iRAR:NCRG3jWLS:NLWW3kAPW:NSFA3lPPG:NSTU3mPPT:NTAA3nRGI:NTTG3nHOI:NTTO3nBAH:OBBI3oDMM:OEDF3pJED:OEJN3pRUH:OERK3pAJF:OESK3pIFN:OIFM3qIKA:OIIE3qTHR:OIII3qKER:OIKK3qMHD:OIMM3qSYZ:OISS3qTBZ:OITT3qZAH:OIZH3qAMM:OJAI3rADJ:OJAM3rAQJ:OJAQ3rKWI:OKBK3sBEY:OLBA3tAUH:OMAA3uAAN:OMAL3uDXB:OMDB3uDWC:OMDW3uSHJ:OMSJ3uMCT:OOMS3vISB:OPIS3wKHI:OPKC3wLHE:OPLA3wRYK:OPRK3wBGW:ORBI3xEBL:ORER3xBSR:ORMM3xDOH:OTHH3yKOA:PHKO3zHNL:PHNL3zITO:PHTO3zKHH:RCKH40TPE:RCTP40NRT:RJAA41KIX:RJBB41CTS:RJCC41HKD:RJCH41FUK:RJFF41KOJ:RJFK41NGO:RJGG41ITM:RJOO41KIJ:RJSN41HND:RJTT41KUV:RKJK42PUS:RKPK42ICN:RKSI42OSN:RKSO42GMP:RKSS42TAE:RKTN42OKA:ROAH41CRK:RPLC43MNL:RPLL43ROS:SAAR44COR:SACO44EPA:SADP45EZE:SAEZ45MDZ:SAME46RES:SARE44IGR:SARI44SLA:SASA47MDQ:SAZM45AJU:SBAR48BEL:SBBE49PLU:SBBH4aBSB:SBBR4aBVB:SBBV4bCNF:SBCF4aCGR:SBCG4cCWB:SBCT4aMAO:SBEG4bFLN:SBFL4aFOR:SBFZ48GIG:SBGL4aGRU:SBGR4aVCP:SBKP4aMAB:SBMA4dMCP:SBMQ49POA:SBPA4aPNZ:SBPL4ePVH:SBPV4fRBR:SBRB4gREC:SBRF4hNAT:SBSG00SJK:SBSJ4aSTM:SBSN49SSA:SBSV4eIQQ:SCDA4iSCL:SCEL4iANF:SCFA4iCCP:SCIE4iIPC:SCIP4jGYE:SEGU4kLTX:SELT4kMEC:SEMT4kUIO:SEQM4kSNC:SESA4kASU:SGAS4lAGT:SGES4lBOG:SKBO4mBAQ:SKBQ4mCUC:SKCC4mCTG:SKCG4mCLO:SKCL4mMDE:SKRG4mLPB:SLLP4nVVI:SLVR4nPBM:SMJP4oCAY:SOCA4pPCL:SPCL4qCIX:SPHI4qLIM:SPJC4qIQT:SPQT4qAQP:SPQU4qTRU:SPRU4qPIO:SPSO4qDZO:SUDU4rMVD:SUMU4rPMV:SVMG4sCCS:SVMI4sGEO:SYCJ4tANU:TAPA4uBGI:TBPB4vFDF:TFFF4wPTP:TFFR4xGND:TGPY4ySTX:TISX4zSJU:TJSJ50SKB:TKPK51UVF:TLPL52AUA:TNCA53BON:TNCB54CUR:TNCC55SXM:TNCM56POS:TTPP57BDA:TXKF58ALA:UAAA59NQZ:UACC59KGF:UAKK59SCO:UATE5aGUW:UATG5aAKX:UATT5bGYD:UBBB5cFRU:UCFM00EVN:UDYZ5dYKS:UEEE5ePYJ:UERP5eMJZ:UERR5eKUT:UGKO5fBUS:UGSB5fTBS:UGTB5fBQS:UHBB5eKHV:UHHH5gUUS:UHSS5gVVO:UHWW5gHTA:UIAA5hBTK:UIBB5iIKT:UIII5iUUD:UIUU5iKBP:UKBB5jHRK:UKHH5jIEV:UKKK5jLWO:UKLL5jODS:UKOO5jARH:ULAA5kLED:ULLI5kMMK:ULMM5kGME:UMGG5lMSQ:UMMS5lABA:UNAA5mBAX:UNBB5nKEJ:UNEE5oKJA:UNKL5mOVB:UNNT5mOMS:UNOO5pNSK:UOOO5mVOG:URWW5qCEK:USCC5rSLY:USDD5rNJC:USNN5rPEE:USPP5rSGC:USRR5rSVX:USSS5rTJM:USTR5rASB:UTAA5sKRW:UTAK5sDYU:UTDD5tSKD:UTSS5uTAS:UTTT5uDME:UUDD5kSVO:UUEE5kVKO:UUWW5kSCW:UUYY5kGOJ:UWGG5kKZN:UWKD5kULY:UWLW5vREN:UWOO5rUFA:UWUU5rKUF:UWWW5wAMD:VAAH5xBOM:VABB5xBHO:VABP5xNAG:VANP5xCMB:VCBI5yPNH:VDPP5zREP:VDSR5zCCU:VECC5xCGP:VGEG60DAC:VGHS60HKG:VHHH61ATQ:VIAR5xDEL:VIDP5xJAI:VIJP5xLKO:VILK5xVTE:VLVT62MFM:VMMC63BLR:VOBL5xCOK:VOCI5xGOI:VOGO5xHYD:VOHS5xMAA:VOMM5xIXZ:VOPB5xTRV:VOTV5xMLE:VRMM64DMK:VTBD65BKK:VTBS65UTP:VTBU65CNX:VTCC65HKT:VTSP65DAD:VVDN66HAN:VVNB66SGN:VVTS66MDL:VYMD67RGN:VYYY67DPS:WADD68SUB:WARR69BTH:WIDD69CGK:WIII69KNO:WIMM69PLM:WIPP69JHB:WMKJ6aKUL:WMKK6aPEN:WMKP6aSIN:WSSS6bPEK:ZBAA6cHET:ZBHH6cTSN:ZBTJ6cTYN:ZBYN6cCAN:ZGGG6cKWL:ZGKL6cNNG:ZGNN6cSZX:ZGSZ6cWUH:ZHHH6cDNH:ZLDH6cLHW:ZLLL6cXNN:ZLXN6cXIY:ZLXY6cUBN:ZMCK6dKMG:ZPPP6cXMN:ZSAM6cHGH:ZSHC6cTNA:ZSJN6cNKG:ZSNJ6cPVG:ZSPD6cSHA:ZSSS6cCKG:ZUCK6cCTU:ZUUU6cXIC:ZUXC6cKHG:ZWSH6cHTN:ZWTN6cURC:ZWWW6cHRB:ZYHB6cDLC:ZYTL6cSHE:ZYTX6c"},147:e=>{"use strict";e.exports=JSON.parse('{"10":"Europe/Stockholm","11":"Europe/Riga","12":"Europe/Vilnius","13":"Africa/Johannesburg","14":"Africa/Gaborone","15":"Africa/Brazzaville","16":"Africa/Bangui","17":"Africa/Malabo","18":"Indian/Mauritius","19":"Africa/Douala","20":"Africa/Bujumbura","21":"Africa/Djibouti","22":"Africa/Cairo","23":"Africa/Asmara","24":"Africa/Nairobi","25":"Africa/Kigali","26":"Africa/Khartoum","27":"Africa/Dar_es_Salaam","28":"Africa/Kampala","29":"America/Denver","30":"Europe/Skopje","31":"Europe/Bratislava","32":"America/Grand_Turk","33":"America/Santo_Domingo","34":"America/Guatemala","35":"America/Tegucigalpa","36":"America/Jamaica","37":"America/Mexico_City","38":"America/Cancun","39":"America/Merida","40":"Asia/Taipei","41":"Asia/Tokyo","42":"Asia/Seoul","43":"Asia/Manila","44":"America/Argentina/Cordoba","45":"America/Argentina/Buenos_Aires","46":"America/Argentina/Mendoza","47":"America/Argentina/Salta","48":"America/Fortaleza","49":"America/Belem","50":"America/Puerto_Rico","51":"America/St_Kitts","52":"America/St_Lucia","53":"America/Aruba","54":"America/Kralendijk","55":"America/Curacao","56":"America/Lower_Princes","57":"America/Port_of_Spain","58":"Atlantic/Bermuda","59":"Asia/Almaty","60":"Asia/Dhaka","61":"Asia/Hong_Kong","62":"Asia/Vientiane","63":"Asia/Macau","64":"Indian/Maldives","65":"Asia/Bangkok","66":"Asia/Ho_Chi_Minh","67":"Asia/Yangon","68":"Asia/Makassar","69":"Asia/Jakarta","01":"America/Nuuk","02":"America/Thule","03":"Atlantic/Reykjavik","04":"Europe/Belgrade","05":"America/Toronto","06":"America/Edmonton","07":"America/Halifax","08":"America/St_Johns","09":"America/Thunder_Bay","0a":"America/Glace_Bay","0b":"America/Vancouver","0c":"America/Winnipeg","0d":"America/Regina","0e":"America/Goose_Bay","0f":"Africa/Algiers","0g":"Africa/Porto-Novo","0h":"Africa/Ouagadougou","0i":"Africa/Accra","0j":"Africa/Abidjan","0k":"Africa/Lagos","0l":"Africa/Niamey","0m":"Africa/Tunis","0n":"Africa/Lome","0o":"Europe/Brussels","0p":"Europe/Berlin","0q":"Europe/Tallinn","0r":"Europe/Helsinki","0s":"Europe/London","0t":"Europe/Amsterdam","0u":"Europe/Dublin","0v":"Europe/Copenhagen","0w":"Europe/Luxembourg","0x":"Europe/Oslo","0y":"Arctic/Longyearbyen","0z":"Europe/Warsaw","1a":"Africa/Lusaka","1b":"Indian/Comoro","1c":"Indian/Mayotte","1d":"Indian/Reunion","1e":"Indian/Antananarivo","1f":"Africa/Luanda","1g":"Africa/Libreville","1h":"Africa/Sao_Tome","1i":"Africa/Maputo","1j":"Indian/Mahe","1k":"Africa/Ndjamena","1l":"Africa/Blantyre","1m":"Africa/Windhoek","1n":"Africa/Kinshasa","1o":"Africa/Lubumbashi","1p":"Africa/Bamako","1q":"Africa/Banjul","1r":"Atlantic/Canary","1s":"Africa/Freetown","1t":"Africa/Monrovia","1u":"Africa/Casablanca","1v":"Africa/Dakar","1w":"Africa/Nouakchott","1x":"Africa/Conakry","1y":"Atlantic/Cape_Verde","1z":"Africa/Addis_Ababa","2a":"America/New_York","2b":"America/Chicago","2c":"America/Los_Angeles","2d":"America/Boise","2e":"America/Phoenix","2f":"Europe/Tirane","2g":"Europe/Sofia","2h":"Asia/Nicosia","2i":"Europe/Zagreb","2j":"Europe/Madrid","2k":"Europe/Paris","2l":"Europe/Athens","2m":"Europe/Budapest","2n":"Europe/Rome","2o":"Europe/Ljubljana","2p":"Europe/Prague","2q":"Asia/Jerusalem","2r":"Europe/Malta","2s":"Europe/Vienna","2t":"Atlantic/Azores","2u":"Europe/Lisbon","2v":"Europe/Sarajevo","2w":"Europe/Bucharest","2x":"Europe/Zurich","2y":"Europe/Istanbul","2z":"Europe/Chisinau","3a":"America/Managua","3b":"America/Panama","3c":"America/Costa_Rica","3d":"America/El_Salvador","3e":"America/Port-au-Prince","3f":"America/Havana","3g":"America/Cayman","3h":"America/Nassau","3i":"America/Belize","3j":"Pacific/Rarotonga","3k":"Pacific/Wallis","3l":"Pacific/Apia","3m":"Pacific/Pago_Pago","3n":"Pacific/Tahiti","3o":"Asia/Bahrain","3p":"Asia/Riyadh","3q":"Asia/Tehran","3r":"Asia/Amman","3s":"Asia/Kuwait","3t":"Asia/Beirut","3u":"Asia/Dubai","3v":"Asia/Muscat","3w":"Asia/Karachi","3x":"Asia/Baghdad","3y":"Asia/Qatar","3z":"Pacific/Honolulu","4a":"America/Sao_Paulo","4b":"America/Boa_Vista","4c":"America/Campo_Grande","4d":"America/Araguaina","4e":"America/Bahia","4f":"America/Porto_Velho","4g":"America/Rio_Branco","4h":"America/Recife","4i":"America/Santiago","4j":"Pacific/Easter","4k":"America/Guayaquil","4l":"America/Asuncion","4m":"America/Bogota","4n":"America/La_Paz","4o":"America/Paramaribo","4p":"America/Cayenne","4q":"America/Lima","4r":"America/Montevideo","4s":"America/Caracas","4t":"America/Guyana","4u":"America/Antigua","4v":"America/Barbados","4w":"America/Martinique","4x":"America/Guadeloupe","4y":"America/Grenada","4z":"America/St_Thomas","5a":"Asia/Oral","5b":"Asia/Aqtobe","5c":"Asia/Baku","5d":"Asia/Yerevan","5e":"Asia/Yakutsk","5f":"Asia/Tbilisi","5g":"Asia/Vladivostok","5h":"Asia/Chita","5i":"Asia/Irkutsk","5j":"Europe/Kiev","5k":"Europe/Moscow","5l":"Europe/Minsk","5m":"Asia/Krasnoyarsk","5n":"Asia/Barnaul","5o":"Asia/Novokuznetsk","5p":"Asia/Omsk","5q":"Europe/Volgograd","5r":"Asia/Yekaterinburg","5s":"Asia/Ashgabat","5t":"Asia/Dushanbe","5u":"Asia/Samarkand","5v":"Europe/Ulyanovsk","5w":"Europe/Samara","5x":"Asia/Kolkata","5y":"Asia/Colombo","5z":"Asia/Phnom_Penh","6a":"Asia/Kuala_Lumpur","6b":"Asia/Singapore","6c":"Asia/Shanghai","6d":"Asia/Ulaanbaatar"}')}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};return(()=>{"use strict";n.r(a),n.d(a,{AVENZAICONS:()=>C,GEO_HASH_GRID_SIZE:()=>Te,GOOGLEICONS:()=>G,GeoGridIndex:()=>Me,GeoPoint:()=>T,KMLGenerator:()=>v,NAT_POSITION_ENTRY:()=>p,NAT_POSITION_EXIT:()=>h,Ofp:()=>ue,PINS:()=>d,PIN_BLUE:()=>I,PIN_BROWN:()=>R,PIN_GREEN:()=>D,PIN_NONE:()=>M,PIN_ORANGE:()=>F,PIN_PINK:()=>P,PIN_PURPLE:()=>U,PIN_RED:()=>K,PIN_YELLOW:()=>B,Route:()=>m,StringExtractException:()=>_,Track:()=>f,arinc_normalizer:()=>O,avenzaIconTemplate:()=>J,avenzaStyleTemplate:()=>y,avenzaTemplate:()=>X,dm_normalizer:()=>L,extract:()=>Q,googleEarthStyleTemplate:()=>Z,iata2GeoPoint:()=>re,iata2icao:()=>te,iata2tz:()=>ae,icao2iata:()=>ne,iconTemplate:()=>b,isARINC:()=>c,months3:()=>Ee,nm_to_rad:()=>o,ogimetData:()=>Be,ogimetRoute:()=>Ie,rad_to_deg:()=>A,rad_to_nm:()=>N,styleTemplate:()=>W,template:()=>Y,tzOffset:()=>ie,version:()=>Re});class e{constructor(e,t){this.latitude=e,this.longitude=t}get[Symbol.toStringTag](){return"LatLng"}get asDM(){const e=function(e,t="NS"){let n=Math.abs(e),a=Math.floor(n),i=60*(n-a),r=Math.floor(i),N=Math.round(10*(i-r));N>=10&&(N=0,r+=1),r>=60&&(r=0,a+=1);let A="",o=2;return"NS"===t?A=e>=0?t[0]:t[1]:(A=e>0?t[0]:t[1],o=3),[A,a.toFixed(0).padStart(o,"0"),r.toFixed(0).padStart(2,"0"),"."+N.toFixed(0)].join("")};return e(this.latitude)+e(this.longitude,"EW")}get asPhiLam(){const[e,n]=[this.latitude,this.longitude].map((e=>e*Math.PI/180));return new t(e,n)}}class t{constructor(e,t){this.phi=e,this.lam=t}get[Symbol.toStringTag](){return"PhiLam"}get asLatLng(){const[t,n]=[this.phi,this.lam].map((e=>180*e/Math.PI));return new e(t,n)}}const i=6371e3,r=180/Math.PI,N=e=>e*i/1852,A=e=>e*r,o=e=>1852*e/i,s=e=>1e3*e/i,E=(e,t)=>Number((e-Math.floor(e/t)*t).toPrecision(8));function S(e){const t=e[0];if("NSEW".indexOf(t)<0)throw new Error("invalid letter coordinates: "+e);const n="N"===t||"S"===t?3:4;return("N"===t||"E"===t?1:-1)*(parseInt(e.slice(1,n),10)+parseFloat(e.slice(n))/60)}function l(t){return t&&t.length?new e(...t):new e([0,0])}function L(t){let n=0,a=0;return Array.isArray(t)?[n,a]=t:(n=t.slice(0,7),a=t.slice(7)),new e(S(n),S(a))}const u=/^([NESW]\d{4}|\d[NESW]\d{3}|\d{4}[NS]\d{3,5}[EW]|\d{2}[NS]\d{3}[EW])$/u,c=e=>e.match(u);function O(t){const n=function(t,n,a){switch(t){case"N":return new e(n,-a);case"E":return new e(n,a);case"S":return new e(-n,a);case"W":return new e(-n,-a);default:throw new Error("invalid letter")}};let a=0,i=0;return"NESW".indexOf(t[0])>=0?(a=parseInt(t.slice(1,3),10)+.5,i=parseInt(t.slice(3,5),10),n(t[0],a,i)):"NESW".indexOf(t[1])>=0?(a=parseInt(t[0]+t[2],10)+.5,i=parseInt("1"+t.slice(3,5),10),n(t[1],a,i)):("NS".indexOf(t[4])>=0?(a=S(t[4]+t.slice(0,4)+".0"),i=S((t.slice(-1)+t.slice(5,-1)+"00").slice(0,5)+".0")):(a=S(t[2]+t.slice(0,2)+"00.0"),i=S(t.slice(-1)+t.slice(3,-1)+"00.0")),new e(a,i))}class T{constructor(t,{name:n="",description:a="",normalizer:i=l}={}){t instanceof T?(this.latlng=t.latlng,n=n||t.name||"",a=a||t.description||""):t instanceof e?this.latlng=t:t&&"object"==typeof t&&Reflect.has(t,"longitude")&&Reflect.has(t,"latitude")?(this.latlng=new e(parseFloat(t.latitude),parseFloat(t.longitude)),n=n||t.name||"",a=a||t.description||""):this.latlng=i?i(t):t,this.name=n.trim(),this.description=a,this.philam_cache=null,this.dm_cache=null}get[Symbol.toStringTag](){return"GeoPoint"}get latitude(){return this.latlng.latitude}get longitude(){return this.latlng.longitude}get philam(){return null===this.philam_cache&&(this.philam_cache=this.latlng.asPhiLam),this.philam_cache}get dm(){return null===this.dm_cache&&(this.dm_cache=this.latlng.asDM),this.dm_cache}static distance(e,t,n=null){return e.distanceTo(t,n)}static course(e,t){return e.course_to(t)}static xtd(e,t,n=null){return e.xtd_to(t,n)}static getCenter(e,n={}){let a=e.length,i=0,r=0,N=0,A=0,o=0;for(let t of e){r=t.philam.phi,i=t.philam.lam;let e=Math.cos(r);N+=e*Math.cos(i),A+=e*Math.sin(i),o+=Math.sin(r)}return N/=a,A/=a,o/=a,r=Math.atan2(o,Math.sqrt(Math.pow(N,2)+Math.pow(A,2))),i=Math.atan2(A,N),new T(new t(r,i).asLatLng,n||{})}distanceTo(e,t=null){const n=this.philam.phi,a=this.philam.lam,i=e.philam.phi,r=e.philam.lam,N=Math.acos(Math.sin(n)*Math.sin(i)+Math.cos(n)*Math.cos(i)*Math.cos(r-a));return null!==t?t(N):N}course_to(e){const t=this.philam.phi,n=this.philam.lam,a=e.philam.phi,i=e.philam.lam;return E(Math.atan2(Math.sin(n-i)*Math.cos(a),Math.cos(t)*Math.sin(a)-Math.sin(t)*Math.cos(a)*Math.cos(n-i)),2*Math.PI)}xtd_to(e,t=null){const n=e[0].course_to(e[1]),a=e[0].course_to(this),i=e[0].distanceTo(this),r=Math.asin(Math.sin(i)*Math.sin(a-n));return null!==t?t(r):r}atFraction(e,n=.5,a=null){const i=null===a?this.distanceTo(e):a,r=this.philam.phi,N=this.philam.lam,A=e.philam.phi,o=e.philam.lam,s=Math.sin((1-n)*i)/Math.sin(i),E=Math.sin(n*i)/Math.sin(i),S=s*Math.cos(r)*Math.cos(N)+E*Math.cos(A)*Math.cos(o),l=s*Math.cos(r)*Math.sin(N)+E*Math.cos(A)*Math.sin(o),L=s*Math.sin(r)+E*Math.sin(A),u=Math.atan2(L,Math.sqrt(Math.pow(S,2)+Math.pow(l,2))),c=Math.atan2(l,S);return new T(new t(u,c).asLatLng)}circle(e,n=64,a=o){a&&(e=a(e));const i=(e,n)=>{const a=this.philam.phi,i=this.philam.lam,r=Math.asin(Math.sin(a)*Math.cos(e)+Math.cos(a)*Math.sin(e)*Math.cos(n));let N=i;return 0!==Math.cos(r)&&(N=Math.asin(Math.sin(n)*Math.sin(e)/Math.cos(r)),i-N<-Math.PI&&(N=i+Math.PI),N=E(i-N+Math.PI,2*Math.PI)-Math.PI),new T(new t(r,N).asLatLng)},r=[];for(let t=0;t<=n;t+=1)r.push(i(e,2*t*Math.PI/n));return r}equals(e){return this.latitude.toFixed(6)===e.latitude.toFixed(6)&&this.longitude.toFixed(6)===e.longitude.toFixed(6)}toJSON(){return{__geopoint__:!0,latitude:this.latitude.toFixed(6),longitude:this.longitude.toFixed(6),name:this.name,description:this.description}}}const M=0,I=1,B=2,R=3,F=4,P=5,K=6,D=7,U=8,p=0,h=1,d=["#placemark-none","#placemark-blue","#placemark-yellow","#placemark-brown","#placemark-orange","#placemark-pink","#placemark-red","#placemark-green","#placemark-purple"],G=["","blu","ylw","red","orange","pink","red","grn","purple"].map((e=>e?`https://maps.google.com/mapfiles/kml/paddle/${e}-blank.png`:"")),C=["null","blue","yellow","red","orange","red","red","green","purple"].map((e=>`http://download.avenza.com/images/pdfmaps_icons/pin-${e}-inground.png`));class m{constructor(e,{name:t="",description:n=""}={}){this.points=e||[],this.name=t,this.description=n}get[Symbol.toStringTag](){return"Route"}get[Symbol.iterator](){return this.points[Symbol.iterator]}equals(e){if(this.points.length!==e.points.length)return!1;for(let[t,n]of((e,t)=>e.map(((e,n)=>[e,t[n]])))(this.points,e.points))if(!t.equals(n))return!1;return!0}get segments(){let e=[];return this.points.length>0&&this.points.reduce(((t,n)=>(e.push([t,n]),n))),e}distance(e=N){const t=this.segments.map((([e,t])=>e.distanceTo(t))).reduce(((e,t)=>e+t),0);return null===e?t:e(t)}split(e,t={}){let{converter:n=o,preserve:a=!1}=t||{},i=[],r=0,N=!0,A=n?n(e):e,s=null,E=null;for([s,E]of this.segments){N&&(N=!1,i.push(s));let e=s.distanceTo(E),t=r;for(;t<=e-A;)t+=A,i.push(s.atFraction(E,t/e,e));r=parseFloat((t-e).toFixed(10)),a&&r&&(i.push(E),r=0)}return r&&i.push(E),new m(i,t)}}class f extends m{constructor(e,t){let{isMine:n=!1,isComplete:a=!0,infos:i={}}=t||{};super(e,t),this.isMine=n,this.isComplete=a,this.infos=i}get[Symbol.toStringTag](){return"Track"}static label(e){return`NAT${e}`}}const g=({point:e,style:t})=>`\n     <Placemark>\n      <name><![CDATA[${e.name||e.dm}]]></name>\n      <styleUrl>${t}</styleUrl>\n      <description><![CDATA[${e.description||""}]]></description>\n      <Point>\n        <coordinates>${e.longitude.toFixed(6)},${e.latitude.toFixed(6)}</coordinates>\n      </Point>\n    </Placemark>\n`,V=({coordinates:e,name:t,style:n,description:a})=>`\n<Placemark>\n  <name><![CDATA[${t}]]></name>\n  <styleUrl>${n}</styleUrl>\n  <description><![CDATA[${a}]]></description>\n  <LineString>\n    <tessellate>1</tessellate>\n    <coordinates>${e}</coordinates>\n  </LineString>\n</Placemark>\n`,H=({coordinates:e,name:t,style:n})=>`\n<Placemark>\n  <name><![CDATA[${t}]]></name>\n  <styleUrl>${n}</styleUrl>\n  <LineString>\n    <coordinates>${e}</coordinates>\n  </LineString>\n</Placemark>\n`,x=({name:e,content:t,open:n=1})=>`\n<Folder>\n    <name>${e}</name>\n    <open>${n}</open>\n    ${t}\n</Folder>\n`,Y=({name:e,styles:t,folders:n})=>`<?xml version='1.0' encoding='UTF-8'?>\n<kml xmlns='http://www.opengis.net/kml/2.2'>\n  <Document>\n    <name><![CDATA[${e}]]></name>\n        ${t}\n        ${n}\n  </Document>\n</kml>\n`,X=({name:e,styles:t,folders:n})=>`<?xml version='1.0' encoding='UTF-8'?>\n<kml xmlns='http://www.opengis.net/kml/2.2'>\n  <Document>\n    <name><![CDATA[${e}]]></name>\n        ${t}\n        <Folder><name><![CDATA[${e}]]></name>\n        ${n}\n        </Folder>\n  </Document>\n</kml>\n`,W=({id:e,color:t,width:n=6})=>`\n    <Style id="${e}">\n        <LineStyle>\n            <width>${n}</width>\n            <color>${t}</color>\n        </LineStyle>\n    </Style>\n`,y=({id:e,color:t,width:n=3})=>W({id:e,color:t,width:n}),Z=({id:e,color:t,width:n=2})=>W("rnat"===e?{id:e,color:t,width:1}:{id:e,color:t,width:n}),b=({id:e,href:t,x:n="0.5",y:a="0.0"})=>t?`\n    <Style id="${e}">\n      <IconStyle>\n          <Icon>\n              <href><![CDATA[${t}]]></href>\n          </Icon>\n          <hotSpot x="${n}"  y="${a}" xunits="fraction" yunits="fraction"/>\n      </IconStyle>\n    </Style>\n`:`<Style id="${e}"></Style>\n`,J=({id:e,href:t,x:n="0.5",y:a="0.5"})=>b({id:e,href:t,x:n,y:a}),w=Symbol("pin private property");class k{constructor(e,t={}){this.name=e,this.options=t,this.linestrings=[],this.placemarks=[],this.lineStyle={},this[w]=void 0===t.pinId?M:t.pinId,this.enabled=void 0===t.enabled||t.enabled}get pin(){return this[w]}empty(){this.linestrings=[],this.placemarks=[]}set pin(e){const t=d[this[w]];this[w]=e;const n=d[e];this.placemarks=this.placemarks.map((e=>(e.style===t&&(e.style=n),e)))}}class v{constructor(e={}){this.folders=new Map,this.template=e.template||Y,this.pointTemplate=e.pointTemplate||g,this.lineTemplate=e.lineTemplate||V,this.folderTemplate=e.folderTemplate||x,this.styleTemplate=e.styleTemplate||W,this.iconTemplate=e.iconTemplate||b,this.segmentTemplate=e.segmentTemplate||H,this.icons=e.icons||G,this.name=void 0}static escape(e){return e.replace("&","&amp;").replace("<","&lt;").replace("<","&lt;").replace(">","&gt;").replace('"',"&quot;")}computeOptions(e,t={},n=!1){if(t={...t},n&&void 0===t.style){let{style:n=this.folders.get(e).pin}=t;t.style=n}return void 0===t.style?t.style="#"+e:isNaN(t.style)||(t.style=d[t.style]),t}addFolder(e,t={}){let n=new k(e,t);this.folders.set(e,n);let a={id:e,color:e+"_color"};n.lineStyle={...a,...t}}addFolders(...e){for(let t of e)if("string"==typeof t||t instanceof String)this.addFolder(t);else{let e={...t};Reflect.deleteProperty(e,"name"),this.addFolder(t.name,e)}}addLine(e,t,n={}){let a={name:(n=this.computeOptions(e,n)).name||t.name,style:n.style,description:n.description||t.description};this.folders.get(e).linestrings.push(this.renderLine(t.points,{...a,...n}))}addPoints(e,t,n={}){const a=n.excluded||[];n=this.computeOptions(e,n,!0);for(let i of t.points)a.indexOf(i)>=0&&(n.style=M),this.addPoint(e,i,n)}addPoint(e,t,n={}){n=this.computeOptions(e,n,!0),this.folders.get(e).placemarks.push({point:t,...n})}addSegments(e,t,n={}){n=this.computeOptions(e,n);for(let[a,i]of t.segments){const r={name:`${t.name||e}: ${a.name||a.dm}->${i.name||i.dm}`};this.folders.get(e).linestrings.push(this.renderLine([a,i],{...r,...n},!0))}}render(e={}){let t="";const n=e.iconTemplate||this.iconTemplate,a=e.styleTemplate||this.styleTemplate,i=e.template||this.template,r=e.icons||this.icons;d.forEach(((a,i)=>{0!==i&&(a={id:d[i].slice(1),href:r[i]},t+=n({...a,...e}))}));for(let[,e]of this.folders)e.enabled&&(t+=a(e.lineStyle));return e.name||(e.name=this.name),i({...e,styles:t,folders:this.renderFolders()})}renderFolder(e,t=this.folderTemplate){if(("string"==typeof e||e instanceof String)&&(e=this.folders.get(e)),!e.enabled)return"";let n=[];return n=e.pin===M||void 0===e.pin?e.placemarks.filter((e=>e.style!==d[M]&&void 0!==e.style)):e.placemarks.filter((e=>e.style!==d[M])),t({name:e.name,content:e.linestrings.concat(n.map((e=>this.pointTemplate(e,e.style)))).join("\n"),...e.options})}renderFolders(){let e=[];for(let[,t]of this.folders)e.push(this.renderFolder(t));return e.join("\n")}renderLine(e,t={},n=!1){const a={...t,coordinates:e.map((e=>(e=>`${e.longitude.toFixed(6)},${e.latitude.toFixed(6)}`)(e))).join(" ")};return n?this.segmentTemplate(a):this.lineTemplate(a)}changeFolderColor(e,t,n={}){const a={id:e,color:t};this.folders.get(e).lineStyle={...a,...n}}changeFolderPin(e,t){this.folders.get(e).pin=t}changeFolderState(e,t){this.folders.get(e).enabled=t}reset(){for(let[,e]of this.folders)e.empty()}setName(e){this.name=e}}class _ extends Error{}function Q(e,t,n,a=!0,i=!1){let r=0,N=0;if(t){if(r=e.indexOf(t),-1===r)throw new _(`${t} not found`);i||(r+=t.length)}if(!n)return e.substring(r);if(N=e.indexOf(n,r),-1===N){if(a)return e.substring(r);throw new _(`${n} not found`)}return i&&(N+=n.length),e.substring(r,N)}Reflect.defineProperty(String.prototype,"extract",{value(e,t,n=!0,a=!1){return Q(this,e,t,n,a)}});class $ extends RegExp{[Symbol.matchAll](e){let t=RegExp.prototype[Symbol.matchAll].call(this,e);if(!t)return console.error("WPT Coordinates regexp failed"),[];let n=[];return Array.from(t).forEach((e=>{let t=e[1].trim().replace(/^-+/u,"");""===t&&(t=e[2]+e[3]),n.push(new T([e[2],e[3]],{name:t,normalizer:L}))})),n}}const j=new $(String.raw`(\S+|\s+)\s+([NS]\d{4}\.\d)([EW]\d{5}\.\d)`,"gu"),z=n(709),q=n(199),ee=n(147);function te(e){const t=q.indexOf(e+":");return t>=0?q.substring(t+4,t+8):"????"}function ne(e){const t=q.indexOf(":"+e);return t>=0?q.substring(t-3,t):"???"}function ae(e){const t=q.indexOf(e+":");if(t>=0){const e=q.substring(t+8,t+10);return"00"===e?void 0:ee[e]}}function ie(e,t){const n=ae(e);if(!n)return;let a,i=new Date(Date.parse(t));try{a=i.toLocaleString("en-GB",{timeZone:n})}catch(e){return}const r=/(\d\d)\/(\d\d)\/(\d\d\d\d), (\d\d):(\d\d):\d\d/u.exec(a);if(null!==r){const[,e,t,n,a,N]=r,A=`${n}-${t}-${e}T${a}:${N}`,o=(new Date(Date.parse(A+"Z"))-i)/36e5;if(0===o)return"+0";let s=o>=0?"+":"";return s+=o.toFixed(1),s.endsWith(".0")?s.slice(0,-2):s}}function re(e){const t=te(e);if(t){const e=z[t];if(e)return new T(e,{name:t})}}function Ne(){Ne=function(e,t){return new n(e,void 0,t)};var e=RegExp.prototype,t=new WeakMap;function n(e,a,i){var r=new RegExp(e,a);return t.set(r,i||t.get(e)),oe(r,n.prototype)}function a(e,n){var a=t.get(n);return Object.keys(a).reduce((function(t,n){return t[n]=e[a[n]],t}),Object.create(null))}return Ae(n,RegExp),n.prototype.exec=function(t){var n=e.exec.call(this,t);return n&&(n.groups=a(n,this)),n},n.prototype[Symbol.replace]=function(n,i){if("string"==typeof i){var r=t.get(this);return e[Symbol.replace].call(this,n,i.replace(/\$<([^>]+)>/g,(function(e,t){return"$"+r[t]})))}if("function"==typeof i){var N=this;return e[Symbol.replace].call(this,n,(function(){var e=arguments;return"object"!=typeof e[e.length-1]&&(e=[].slice.call(e)).push(a(e,N)),i.apply(this,e)}))}return e[Symbol.replace].call(this,n,i)},Ne.apply(this,arguments)}function Ae(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&oe(e,t)}function oe(e,t){return(oe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}const se=n(709),Ee=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];const Se=Object.freeze({pypdf2:3,pdfjs:4}),le=Object.freeze({S4:1,NVP:2}),Le=n(449);class ue{constructor(e=""){console.assert(e.startsWith("_PDFJS_"),"invalid text file"),this.pdfParser=Se.pdfjs,this.ofpType=le.S4,e.includes("--FLIGHT SUMMARY--")&&(this.ofpType=le.NVP);try{this.infos=function(e){let t=Ne(/(AF[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]+[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+)([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{4})\/([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{4})[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]+\/[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{4})z[\0-\t\x0B\f\x0E-\u2027\u202A-\u{10FFFF}]*OFP[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+([0-9]+[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{0,8})/u,{flight:1,depICAO:2,destICAO:3,datetime:4,ofp:5}),n=t.exec(e);null===n&&(t=Ne(/(AF[\0-\t\x0B\f\x0E-\u2027\u202A-\u{10FFFF}]+)([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{4})\/([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{4})[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]+\/[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]{4})z[\0-\t\x0B\f\x0E-\u2027\u202A-\u{10FFFF}]*OFP[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]+([\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uFEFE\uFF00-\u{10FFFF}]+)Main/u,{flight:1,depICAO:2,destICAO:3,datetime:4,ofp:5}),n=t.exec(e));let{flight:a,depICAO:i,destICAO:r,datetime:A,ofp:o}=n.groups;const[s]=A.split("/",1),E=parseInt(A.substring(0,2),10),S=Ee.indexOf(A.substring(2,5)),l=parseInt(A.substring(5,9),10),L=parseInt(A.substring(10,12),10),u=parseInt(A.substring(12,14),10),c=new Date(Date.UTC(l,S,E,L,u)),O=e.indexOf("Inflight Released")>=0,M=e.extract("ATC FLIGHT PLAN","TRACKSNAT").extract("(",")",!1,!0),I=a.replace(/\s/gu,"");let B=I;t=/\(FPL-([^-]+)-/u,n=t.exec(M),n&&(B=n[1]),t=new RegExp(String.raw`(?:-TRIP|SUMMARYTRIP)\s+[0-9]+[\s.]+(\d{2})(\d{2})\s`,"u"),n=t.exec(e),null===n&&(t=new RegExp(String.raw`-${r}(\d{2})(\d{2})\s`,"u"),n=t.exec(M),null===n?console.log("flight duration not found, arbitrary set to 1 hour"):console.log("trip time not found, using fpl flight time"));const R=n?parseInt(n[2],10)+60*parseInt(n[1],10):60;t=new RegExp(String.raw`-${r}.+\s(\S{4})\s(\S{4})\s?[\n\-]`,"u"),n=t.exec(M);let F=[];null!==n?(F.push(n[1]),F.push(n[2])):(t=new RegExp(String.raw`-${r}.+\s(\S{4})\s?[\n\-]`,"u"),n=t.exec(M),null!==n&&F.push(n[1])),t=/RALT\/((?:\S{4}[ \n])+)/u,n=t.exec(M);let P=[];null!==n&&(P=n[1].trim().split(/\s/u));let K=[...M.matchAll(/F(\d{3})\s/gu)].map((e=>1*e[1])),D=300;K&&K.length?D=Math.round(K.reduce(((e,t)=>e+t),0)/K.length):K=[D];const U=e.extract("FLIGHT SUMMARY","Generated");let p,h;O&&(t=new RegExp(String.raw`ATC:${B}\s+(\S+)\s+\d{4}\s+\.{4}\s+(\d{2})(\d{2})`,"u"),n=t.exec(U),n&&(p=n[1],h=new Date(Date.UTC(l,S,E,parseInt(n[2],10),parseInt(n[3],10))))),t=/\s(\d{2})(\d{2})\s+TAXI IN/u,n=t.exec(U);let d=15;null===n?console.log("taxiTimeOUT not found, arbitrary set to 15mn"):d=60*parseInt(n[1],10)+parseInt(n[2],10);let G=15;t=/\/\s+(\d{2})(\d{2})MIN/u,n=t.exec(U),null===n?console.log("arrival taxitime not found, arbitrary set to 15mn"):G=60*parseInt(n[1],10)+parseInt(n[2],10),t=new RegExp(String.raw`\s${r}/([A-Z]{3})\s\d{4}`,"u"),n=t.exec(U);const C=n?n[1]:"";t=new RegExp(String.raw`\s${i}/([A-Z]{3})\s\d{4}`,"u"),n=t.exec(U);const m=n?n[1]:ne(i);t=/\.PLD\s+(\d+)\s/u,n=t.exec(U);const f=n?parseInt(n[1],10):0;t=/\.BLOCK\s+(\d+)\s/u,n=t.exec(U);const g=n?parseInt(n[1],10):0;t=/\|TRIP\s+(\d+)\s/u,n=t.exec(U);const V=n?parseInt(n[1],10):0;t=new RegExp(String.raw`GND DIST\s+(\d+)${s.toUpperCase().substring(0,5)}`,"u"),n=t.exec(U);const H=n?parseInt(n[1],10):0;t=/\s+STA\s+([0-9]{4})/u,n=t.exec(U);let x=n?new Date(Date.UTC(l,S,E,parseInt(n[1].slice(0,2),10),parseInt(n[1].slice(2),10))):null;x&&x<c&&(x=new Date(Date.UTC(l,S,E+1,parseInt(n[1].slice(0,2),10),parseInt(n[1].slice(2),10))));let Y="???";t=/-([AB][0-9]{2}.|BCS\d)\//u,n=t.exec(M),n&&(Y={A388:"380",B772:"772",B773:"773",B77W:"773",B77L:"77F",B788:"787",B789:"787",B78X:"787",A318:"318",A319:"319",A320:"320",A20N:"320",A321:"321",A332:"330",A333:"330",A338:"330",A339:"330",A342:"340",A343:"340",A344:"340",A345:"340",A346:"340",A359:"350",A35K:"350",BCS1:"220",BCS3:"220"}[n[1]]||"???");const X=["220","318","319","320","321"].includes(Y)?"MC":"LC";let W="";t=/REG\/(\S+)/u,n=t.exec(M),n&&(W=n[1][0]+"-"+n[1].slice(1));let y,Z,b,J="";t=/CODE\/(\S+)/u,n=t.exec(M),n&&(J=n[1]);let w=0;if(P.length>0){if(t=/ETOPS\s+(\d{3})\s/u,n=t.exec(U),n)w=parseInt(n[1],10);else try{n=t.exec(e.extract("FPL SUMMARY","Generated")),n&&(w=parseInt(n[1],10))}catch(e){console.log("ETOPS range not found")}const a=e.extract("ETOPS SUMMARY","--FLIGHT LOG");t=/EEP\((\S{4})\)/u,n=t.exec(a),n&&(Z=n[1]),t=/EXP\((\S{4})\)/u,n=t.exec(a),n&&(y=n[1]),t=/ETO\.{4}\s+([\d.]+)\/EFOB\s([\d.]+)/gu,b=Math.min(...Array.from(a.matchAll(t),(e=>parseFloat(e[2])-parseFloat(e[1]))))}const k=h||new Date(c.getTime()+6e4*d),v=new Date(k.getTime()+6e4*R),Q=new Date(v.getTime()+6e4*G),$={};let j=null;try{const a=e.extract("CREW PAIRING","Generated");if(t=/DATE\s:\s(\d+)\.(\S{3})\.(\d{4})/u,n=t.exec(a),!n)throw new Error("could not extract pairing month/year");{const e=parseInt(n[3],10),t=Ee.indexOf(n[2])+1;if(t<=0)throw new Error("could not extract pairing month");const i=((e,t,n)=>{const a=[];let i={legs:[]},r=null;const N=/(\d{2})\/(\d{2})\s\S+(\sX)?\s(\S{3})\s>\s(\S{3})\s\(([-+\dh]+)\)\s(\d{2}):(\d{2})\s(?:\d{2}:\d{2})\s(\d{2}):(\d{2})/gu;for(const A of e.matchAll(N)){const e=parseInt(A[2],10),N=parseInt(A[1],10),o=e<n?t+1:t,s=new Date(Date.UTC(o,e-1,N,parseInt(A[7],10),parseInt(A[8],10))),E=parseInt(A[10],10)+60*parseInt(A[9],10),S=A[4],l=A[5],L=re(S),u=re(l);r&&s-r>36e6&&(a.push(i),i={legs:[]}),i.legs.push({depIATA:S,departure:L,arrival:u}),r=new Date(s.getTime()+6e4*E)}return i.legs.length>0&&a.push(i),a})(a,e,t);j=(e=>{let t="MT1";const n=[];if(e.length<=0||e[0].legs.length<=0)return t;let a=e[0].legs[0].departure;for(const a of e){for(const e of a.legs){const n=e.departure.distanceTo(e.arrival,N);if(n>3e3)return"LT";n>2100&&(t="MT2")}a.legs.length>0&&n.push(a.legs[a.legs.length-1].arrival)}if("MT1"===t)return t;for(const e of n)if(Math.abs(Math.floor(a.longitude/15)-Math.floor(e.longitude/15))>=4)return"LT";return t})(i);for(const e of i)if(e.legs&&e.legs.length>0){const t=e.legs[0].depIATA;$[t]=ae(t)}}}catch(e){e instanceof _||console.error(e)}const z={flightNo:I,callsign:B,depICAO:i,depIATA:m,destICAO:r,destIATA:C,ofpOUT:c,ofpOFF:k,ofpON:v,ofpIN:Q,scheduledIN:x,flightTime:(v.getTime()-k.getTime())/6e4,blockTime:(Q.getTime()-c.getTime())/6e4,scheduledBlockTime:x?(x.getTime()-c.getTime())/6e4:0,ofpTextDate:s,ofp:o.replace("©",""),alternates:F,ralts:P,raltPoints:[],taxiTimeOUT:d,taxiTimeIN:G,rawFPL:M,aircraftType:Y,flightTypeAircraft:X,aircraftRegistration:W,aircraftICAO24:J,EEP:null,EXP:null,maxETOPS:w,minFuelMarginETOPS:b,averageFL:D,levels:K,payload:f/1e3,tripFuel:V/1e3,blockFuel:g/1e3,groundDistance:H,inFlightReleased:O,inFlightStart:p,flightTypePNT:j,tzdb:$};try{z.raltPoints=[];for(const e of P)e&&se[e]?z.raltPoints.push(new T(se[e],{name:e,description:"ETOPS"})):console.error("missing airport",e);Z&&se[Z]?z.EEP=new T(se[Z],{name:Z,description:"EEP"}):Z&&console.error("missing airport",Z),y&&se[y]?z.EXP=new T(se[y],{name:y,description:"EXP"}):y&&console.error("missing airport",y)}catch(e){console.log(e)}return z}(e)}catch(e){console.error(e);try{window&&window.alert("Erreur: {error}")}catch(e){}throw e}this.removePageFooterRegex=new RegExp(String.raw`([\s-]\d{1,2})?Page\s[0-9]+\s.+?Page\s[0-9]+.+?\/${this.infos.depICAO}-${this.infos.destICAO}`,"gsu"),this.text=e.replace(this.removePageFooterRegex,""),this.cache=function(e,t){return void 0===this.cacheStore&&(this.cacheStore={}),void 0===this.cacheStore[e]&&(this.cacheStore[e]=t()),this.cacheStore[e]}}get description(){const e=this.infos;return`${e.flightNo} ${e.depICAO}-${e.destICAO} ${e.ofpTextDate} ${e.ofpOUT.toISOString().substring(11,16)}z OFP ${e.ofp}`}wptCoordinates(e="WPT COORDINATES"){const t=this.infos,n=this.ofpType===le.NVP?"----"+t.destICAO:"----",a=this.text.extract(e,n).matchAll(j);return a.length>0&&(t.inFlightReleased?t.inFlightStart&&(a[0].name=t.inFlightStart):a[0].name=this.infos.depICAO),a}wptCoordinatesAlternate(e="WPT COORDINATES",t=!1){const n=this.ofpType===le.NVP?"--WIND INFORMATION--":"ATC FLIGHT PLAN";function a(e){return[...e].reverse().join("")}const i=a(this.text.extract(e,n,t)).split("----",1)[0];return a(i).matchAll(j)}wptNamesEET(e){const t=this.text.extract("ATC DEPARTURE","DESTINATION ALTERNATE",!0).matchAll(/[\s-]([A-Z0-9/]+)\s+[0-9]{3}\s+(?:[0-9.\s]{4})\s+\.\.\.\.\/\.\.\.\.\s(.{3})\s[A-Z0-9/.+\s-]+?[0-9]{4}\/([0-9]{4})\s+[0-9]{3}\/[0-9]{3}/gu),n={};let a=0,i=this.infos.levels[0];for(let[,e,r,N]of t){e.startsWith("/")&&(e=e.slice(1));const t=parseInt(r,10);isNaN(t)||(i=t),n[e.split("/")[0]]=[a,i],a=60*parseFloat(N.slice(0,2))+parseFloat(N.slice(2))}n[this.infos.destICAO]=[a,i];const r=[];let N=!1;const A=e=>{for(const t of e){const e=t();if(null!==e&&void 0!==n[e])return n[e]}};for(const t of e)if(void 0===n[t.name]){const e=A([()=>t.name.replace(/00\.0/gu,""),()=>t.name.replace(/\.0/gu,""),()=>"N5928.0W10155.4"===t.name?"N5928W10155":null]);if(!e){console.log("missing point",t.name),N=!0;break}r.push([t,...e])}else r.push([t,...n[t.name]]);return N?[]:r}isMyTrack(e){return-1!==this.fplRoute.indexOf(f.label(e))}trackParser(){let e="";try{e=this.text.extract("ATC FLIGHT PLAN").extract(")")}catch(e){return[]}let t=[];if(e.includes("REMARKS:")&&(e=e.split("REMARKS:",1)[0],e=e.split("Generated at",1)[0]),e.includes(" LVLS ")){const n=e.split(/(?:\s|[^A-Z\d])([A-Z])\s{3}/gu).slice(1);for(let e=0,a=n.length;e<a;e+=2){let a=n[e+1];a.includes(" NOTES:")&&(a=a.split(" NOTES:",1)[0]),t.push([n[e],a])}}else e.includes("TRACKS")&&(console.error("Unknown TRACKSNAT message format"),console.log(e));return{results:t,infos:{}}}get tracks(){return this.cache("tracks",(()=>{const{results:e,infos:t}=this.trackParser(),n=/(\d{2,4}[NS]\d{3,5}[EW]|[NESW]\d{4}|\d[NESW]\d{3}[^EW])/u;let a={},i=[],r=[];return e.map((([,e])=>{e.split(" LVLS ",1)[0].split(" ").forEach((e=>{const t=e.trim();""!==t&&null===n.exec(t)&&r.push(t)}))})),r.forEach((e=>{const t=Le[e];void 0!==t&&(a[e]=new T(t,{name:e}))})),e.forEach((([e,r])=>{let N=[],A=!0;const o=this.isMyTrack(e);let s=o?{}:a;o&&this.route.points.forEach((e=>{""!==e.name&&(s[e.name]=e)})),r.split(" LVLS ",1)[0].split(" ").forEach((e=>{const t=e.trim();if(""!==t)if(null!==n.exec(t))N.push(new T(t,{name:t,normalizer:O}));else{let e=s[t];void 0!==e?N.push(new T(e,{name:t})):A=!1}}));let E="";r.match(/RTS WEST/u)&&(E="WEST"),r.match(/RTS EAST/u)&&(E="EAST"),i.push(new f(N,{name:`NAT ${e}`,description:r,isMine:o,isComplete:A,infos:{...t,direction:E}}))})),i}))}fpl(){const e=this.infos;let t=e.rawFPL.extract(`-${e.depICAO}`,`-${e.destICAO}`,!1);t=t.substring(t.indexOf(" ")+1);let n=[e.depICAO];return t.split(" ").map((e=>e.trim())).forEach((e=>{""===e||e.startsWith("-N")||n.push(e)})),n.push(e.destICAO),n}get fplRoute(){return this.cache("fplRoute",(()=>this.fpl().map((e=>e.includes("/")?e.split("/",1)[0]:e))))}get route(){return this.cache("route",(()=>new m(this.wptCoordinates())))}lidoRoute(e=!0){return this.cache("lidoRoute"+(e?"_r":""),(()=>{const t=[],n=[],a=[];this.route.points.forEach((e=>{a.push(e.dm),n.push(e.name||e.dm),""===e.name||null!==/\d+/u.exec(e.name)?t.push(e.dm):t.push(e.name)}));let i=[],r=this.fplRoute,N=r.length;if(N<2)return t;let A=r[0],o=r[N-1],s=r.slice(1,-1),E=s.length;for(let r=0;r<E;r+=1){let N=s[r],A=t.indexOf(N);if(-1!==A){i=e?a.slice(1,A).concat(s.slice(r)):n.slice(1,A).concat(s.slice(r));break}}let S=t.slice().reverse(),l=i.slice().reverse(),L=i.length;for(let t=0;t<L;t+=1){let r=l[t],N=S.indexOf(r);if(-1!==N){t>0&&(i=i.slice(0,-t)),i=e?i.concat(a.slice(-N,-1)):i.concat(n.slice(-N,-1));break}}return this.tracks.forEach((e=>{if(e.isMine){let t=e.name.slice(-1),n=function(e,t,n){let a=[];for(;;){let i=e.indexOf(t);if(-1===i)return a;e.splice(i,1,...n.slice(n.indexOf(e[i-1])+1,n.indexOf(e[i+1]))),a=e}}(i,f.label(t),e.points.map((e=>e.name)));n.length>0&&(i=n)}})),i.push(o),i.unshift(this.infos.inFlightStart?this.infos.inFlightStart:A),i=i.concat(...this.infos.alternates),i=i.concat(...this.infos.ralts),i}))}}var ce=n(396),Oe=n.n(ce);const Te={1:5e3,2:1260,3:156,4:40,5:4.8,6:1.22,7:.152,8:.038};class Me{constructor(e=3){this.precision=e,this.gridSize=s(Te[e.toString()]),this.data={}}*getNearestPointsDirty(e,t,n=s){if(null!==n&&(t=n(t)),t>this.gridSize/2){let e=0;for(const[n,a]of Object.entries(Te))if(t>s(a)/2){e=parseInt(n,10)-1;break}throw new Error(`Too large radius, please rebuild GeoHashGrid with precision="${e}"`)}const a=Oe().encode(e.latitude,e.longitude,this.precision);let i=Oe().neighbors(a);i.push(a);for(const e of i)if(e in this.data)for(const[t,n,a]of this.data[e])yield new T([n,a],{name:t})}*getNearestPoints(e,t,n=s){null!==n&&(t=n(t));for(const a of this.getNearestPointsDirty(e,t,null)){let i=a.distanceTo(e,null);i<=t&&(null!==n&&(i/=n(1)),yield[a,i])}}}function Ie(e,t,{name:n="",description:a="",segmentSize:r=300,algorithm:N="xtd"}={}){const A=e.gridSize*i/1e3/2-.1,o=t=>{let n=[...e.getNearestPoints(t,A)];return n.length>0?(n=n.sort(((e,t)=>e[1]-t[1])),n.map((e=>e[0].name)).indexOf(t.name)>=0?[t,0]:[n[0][0],n[0][1]]):[null,null]},E=(e,t,n)=>{const a=n.length;for(let i=t-1;i>e;i-=1){const r=n[i].ogimet.xtd_to([n[i].fpl,n[i+1].fpl]),N=n[i].fpl.xtd_to([n[e].ogimet,n[t].ogimet]);if(Math.abs(N)>Math.abs(r)){const e=i<a-1?n[i].fpl.distanceTo(n[i+1].fpl):-1;if(Math.abs(N)<e||e<0)return i}}return null},S=e=>{if(0===e.length)return[];const t=[e[0]];let n=-1;for(;n<e.length-1;){n+=1;let a=n+2;for(;a<=e.length-1;){let i=E(n,a,e);if(null!==i){t.map((e=>e.ogimet.name)).indexOf(e[i].ogimet.name)<0&&t.push(e[i]),n=i-1;break}a+=1}}return t.push(e[e.length-1]),t.length<e.length?S(t):t};let l=[];const L={};for(const e of t.split(60,{converter:s,preserve:!0}).points){const[t,n]=o(e);null!==t&&(t.name in L?L[t.name][0]>n&&(L[t.name]=[n,e]):L[t.name]=[n,e],l.push({fpl:e,ogimet:t}))}l=l.filter((e=>L[e.ogimet.name][1]==e.fpl)),l=S(l);const u="xtd"===N?e=>{let t=0,n=null,a=e.length-1;for(let i=1;i<a;i+=1){const a=Math.abs(e[i].fpl.xtd_to([e[i-1].ogimet,e[i+1].ogimet]));(null===n||a<t)&&(n=i,t=a)}return n}:e=>{let t=0,n=null,a=e.length-1;for(let i=1;i<a;i+=1){const a=Math.abs(e[i-1].ogimet.course_to(e[i].ogimet)-e[i-1].ogimet.course_to(e[i+1].ogimet));(null===n||a<t)&&(n=i,t=a)}return n};for(;l.length>21;){const e=u(l);l=l.slice(0,e).concat(l.slice(e+1))}return new m(l.map((e=>e.ogimet))).split(r,{preserve:!0,name:n,description:a})}function Be(e,t,n="xtd"){const a=e.infos.taxiTimeOUT,i=e.infos.ofpOUT.getTime()/1e3+60*a,r=(new Date).getTime()/1e3,N=Math.round(Math.max(i,r)),A=new Date(1e3*Math.round(i)),o=new Intl.DateTimeFormat("en",{year:"2-digit",month:"short",day:"2-digit",hour:"2-digit",minute:"2-digit",hourCycle:"h24",timeZone:"UTC"}),[{value:s},,{value:E},,{value:S},,{value:l},,{value:L}]=o.formatToParts(A),u=`Route Gramet ${e.infos.flightNo} ${e.infos.depICAO}-${e.infos.destICAO} ${E}${s}${S} ${l}:${L}z OFP ${e.infos.ofp}`;let c=Math.ceil(e.infos.flightTime/60);const O=e.infos.averageFL,T=Ie(t,e.route,{name:u,algorithm:n}),M=T.points.filter((e=>""!==e.name)).map((e=>e.name));T.description=M.join(" ");const I=`http://www.ogimet.com/display_gramet.php?lang=en&hini=0&tref=${N}&hfin=${c}&fl=${O}&hl=3000&aero=yes&wmo=${M.join("_")}&submit=submit`,B=`0-${Math.round(i)}-${c}-${O}-${M.join("_")}`;return{tref:N,name:u,route:T,wmo:M,url:I,proxy:B}}const Re="1.6.27"})(),a})()}));
//# sourceMappingURL=lidojs.min.js.map